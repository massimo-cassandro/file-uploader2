{"version":3,"file":"FileUploader.esm.min.js","sources":["../src/i18n/it.js","../src/_default_options.js","../src/_utilities.js","../src/_sortable.js","../src/_create_item.js","../src/_send_files.js","../src/_build_hidden_fields.js","../src/_create_uploader.js","../src/_create_info_text.js","../src/_set_listeners.js","../src/_alert.js","../src/file_uploader.js","../src/_init.js"],"sourcesContent":["const fupl_strings_it = {\n\n  // Mustache-like placeholders will be replaced with corresponding values\n\n  alert_too_much_files: 'Puoi selezionare un solo file!', // tentativo di trascinare più file con uploader singolo\n  alert_xhr_error: 'Si &egrave; verificato un errore nel caricamento del file “<strong>{{file_name}}</strong>”.', // errore ajax\n  alert_file_format_error: 'Il file “<strong>{{file_name}}</strong>” è di un formato non consentito',\n  alert_file_size_error: 'Le dimensioni di “<strong>{{file_name}}</strong>” ({{file_size}}) '+\n    'superano il valore massimo consentito ({{allowed_size}})',\n\n  // images sizes alerts\n  alert_img_err_start_string: 'L’immagine “<strong>{{file_name}}</strong>” non è corretta:',\n  alert_img_exact_width_err: 'Larghezza non corrispondente ({{image_dimension}}px invece di {{allowed_dimension}}px)',\n  alert_img_min_width_err: 'Larghezza inferiore a quella minima consentita ({{image_dimension}}px invece di {{allowed_dimension}}px)',\n  alert_img_max_width_err: 'Larghezza superiore a quella massima consentita ({{image_dimension}}px invece di {{allowed_dimension}}px)',\n  alert_img_exact_height_err: 'Altezza non corrispondente ({{image_dimension}}px invece di {{allowed_dimension}}px)',\n  alert_img_min_height_err: 'Altezza inferiore a quella minima consentita ({{image_dimension}}px invece di {{allowed_dimension}}px)',\n  alert_img_max_height_err: 'Altezza superiore a quella massima consentita ({{image_dimension}}px invece di {{allowed_dimension}}px)',\n  alert_img_ratio_err: 'La proporzione tra base e altezza dell’immagine non corrisponde a quella richiesta ({{aspect_ratio}})',\n\n  no_img_text: 'Nessuna immagine presente',\n  no_doc_text: 'Nessun file presente',\n  remove_btn_text: 'Elimina questo file',\n\n  // info text strings\n  info_text_std_imgs : 'immagini in formato <strong>JPEG</strong>, <strong>PNG</strong>, <strong>GIF</strong> o <strong>WEBP</strong>',\n  info_text_imgs_svg : 'immagini in formato <strong>JPEG</strong>, <strong>PNG</strong>, <strong>GIF</strong>, <strong>WEBP</strong> o <strong>SVG</strong>',\n  info_text_imgs_svg_size_info_text: '<strong>Solo per le immagini non SVG:</strong> ',\n\n  info_text_img_optimize_info: 'Ottimizza le tue immagini prima di caricarle. ' +\n    '<a href=\"https://squoosh.app/\" target=\"_blank\" rel=\"noopener noreferrer\">Squoosh</a> è un ottimo (e gratuito) ' +\n    'strumento per farlo.',\n  info_text_svg_optimize_info: 'È consigliabile ottimizzare i file SVG prima del caricamento, ' +\n    'ad esempio tramite <a href=\"https://jakearchibald.github.io/svgomg/\" target=\"_blank\" rel=\"noopener noreferrer\">SVGO</a>',\n\n  info_text_img_fixed_size: 'dimensioni: <strong>{{img_w}}&times;{{img_h}}px</strong>',\n  info_text_img_equal_min_size: 'larghezza e altezza non inferiori a <strong>{{img_min_w}}px</strong>',\n  info_text_img_equal_max_size: 'larghezza e altezza non superiori a <strong>{{img_max_w}}px</strong>',\n  info_text_img_fixed_width : 'larghezza <strong>{{img_w}}px</strong>',\n  info_text_img_fixed_height : 'altezza <strong>{{img_h}}px</strong>',\n  info_text_img_width_range: 'larghezza compresa tra <strong>{{img_min_w}}px</strong> e <strong>{{img_max_w}}px</strong>',\n  info_text_img_min_width: 'larghezza non inferiore a <strong>{{img_min_w}}px</strong>',\n  info_text_img_max_width: 'larghezza non superiore a <strong>{{img_max_w}}px</strong>',\n  info_text_img_height_range: 'altezza compresa tra <strong>{{img_min_h}}px</strong> e <strong>{{img_max_h}}px</strong>',\n  info_text_img_min_height: 'altezza non inferiore a <strong>{{img_min_h}}px</strong>',\n  info_text_img_max_height: 'altezza non superiore a <strong>{{img_max_h}}px</strong>',\n  info_text_pdf_file: 'file in formato <strong>PDF</strong>',\n  info_text_svg_file: 'immagini in formato <strong>SVG</strong>',\n  info_text_max_filesize: 'max <strong>{{max_filesize}}</strong>',\n  info_text_img_aspect_ratio: 'Il rapporto tra base e altezza dell’immagine deve essere esattamente pari a <strong>{{img_aspect_ratio}}</strong>',\n\n  // select or drag labels\n  img_single_select_text   : 'Seleziona un’immagine',\n  img_single_drag_text     : '&hellip;oppure trascinala qui',\n  img_multiple_select_text : 'Seleziona una o pi&ugrave; immagini',\n  img_multiple_drag_text   : '&hellip;oppure trascinale qui',\n  doc_single_select_text   : 'Seleziona un documento',\n  doc_single_drag_text     : '&hellip;oppure trascinalo qui',\n  doc_multiple_select_text : 'Seleziona uno o pi&ugrave; documenti',\n  doc_multiple_drag_text   : '&hellip;oppure trascinali qui',\n\n  sortable_icon_title_text: 'Trascina per cambiare l’ordinamento'\n};\n\nexport default fupl_strings_it;\n","export const default_options = {\n\n  // **********************\n  // rimuovere\n  // error messages interface\n  /*\n    Parameters:\n      - mes  → message string\n      - opts → options & strings of current FileUploader instance\n      - type → one of info, error, warning\n  */\n  alert_api: (mes, opts, type = 'error') => {  // eslint-disable-line\n    window.alert(mes.replace(/(<([^>]+)>)/ig, '' ));\n  },\n  // **********************\n\n\n\n  // server side script url\n  uploader_url: null,\n\n  // locales for numbers parsing\n  locales: 'it-IT',\n\n  // ff true, console shows informations about current FileUploader Configuration\n  debug: false,\n\n  // method for ajax request\n  ajax_method: 'POST',\n\n  // disabled state\n  /*\n    If true, it prevents items from being loaded\n\n    The presence of the disabled attribute in the .fupl-wrapper element disables the element\n    input [type = file] generated by FileUploader (HTML 5 std behavior) and prevents drag & drop.\n\n    The disabled parameter can also be set via the element attribute\n    input [type = file] of fallback, if present.\n    Be carefully about changing disabled state of the input field on the fly:\n    to have it affect the FileUploader instance, you must also modify the disabled attribute\n    of the fieldset.fupl-wrapper element.\n  */\n  disabled: false,\n\n  // types of selectable files. the value must match one of the `upl.mimetypes` arrays\n  filetype: 'auto',\n\n  /*\n    String of extensions or mimetypes separated by commas that identify\n    alloewd files to be uploaded,\n    in addition or replacement of what is set via the `filetype` parameter.\n\n    The `accept` attribute of the input field contained\n    in the FileUploader element (if present), performs the same function.\n\n    In both cases, the values are taken into account only if `filetype == 'auto'`\n\n    In the presence of both the `accept` parameter and the `accept` attribute,\n    a merge is performed, and the accept attribute takes precedence over the parameter.\n    If this parameter is `null`, the` accept` attribute is not present,\n    and  `filetype` parameter is `auto` all file types are accepted.\n\n  */\n  accept: null,\n\n  /*\n    Enable the ability to uploader multiple files.\n    This option can also be activated via the `multiple` attribute\n    of the `input` field (if present)\n  */\n  multiple: false,\n\n  /*\n    Set the FileUploder as required\n    This option can also be activated via the `multiple` attribute\n    of the `input` field (if present)\n  */\n  required: false,\n\n  // disables FileUploader submit button of the parent form element while\n  // FileUploader is performing an upload.\n  disable_submit: false,\n\n  // HTML templates\n  template_main: '<div class=\"fupl-result\"></div>' +\n    '<div class=\"fupl-panel\">' +\n      '<div class=\"fupl-button\">' +\n        '<label><input type=\"file\"></label>' +\n        '<div class=\"fupl-dd-text\"></div>' +\n      '</div>' +\n      '<div class=\"fupl-info-text\"></div>' +\n    '</div>',\n\n  template_empty_img: '<div class=\"fupl-result-empty text-muted small font-italic\">{{no_img_text}}}}</div>',\n  template_empty_doc: '<div class=\"fupl-result-empty text-muted small font-italic\">{{no_doc_text}}</div>',\n\n  // template of trigger for removing files\n  // This markup will be placed inside the `.fupl-remove` element,\n  // that must be present in the template of each FileUploader item\n  // It must be a button element\n  template_remove_btn: '<button type=\"button\" class=\"close fupl-remove-trigger\" aria-label=\"{{remove_btn_text}}\" title=\"{{remove_btn_text}}\">' +\n      '<span aria-hidden=\"true\">&times;</span>' +\n    '</button>',\n\n  // Markup to show uploading progress\n  template_loading_element: '<div class=\"fupl-loading\"><progress class=\"fupl-progress\" max=100 value=0></progress></div>',\n\n  // Alternative loading feedback, used if progress.lengthComputable == false.\n  // In this case and if the `alternative_loading_func` function is not present,\n  // this string replaces the `.fupl-progress` element.\n  template_alternative_loading_element: '<div class=\"spinner-grow text-primary\" role=\"status\">' +\n    '<span class=\"sr-only\">Loading...</span></div',\n\n  // items templates, if tag <a> is used, avoid `href` attribute\n  template_img_item_single: '<div class=\"fupl-item\">' +\n      '<div class=\"fupl-remove\"></div>' +\n      '<img alt=\"Immagine caricata\" class=\"img-fluid fupl-img\">' +\n      '<div class=\"fupl-file-info\">' +\n        '<div class=\"text-truncate fupl-file-name\"></div>' +\n        '<div class=\"fupl-file-size\"></div>' +\n        '<div class=\"fupl-extra-fields\"></div>' +\n      '</div>' +\n    '</div>',\n\n  template_img_item_multiple: '<div class=\"fupl-item\">' +\n      '<div class=\"fupl-remove\"></div>' +\n      '<div class=\"fupl-img-wrapper\">' +\n        '<img alt=\"Immagine caricata\" class=\"img-fluid fupl-img\" draggable=\"false\">' +\n      '</div>' +\n      '<div class=\"fupl-file-info\">' +\n        '<div class=\"text-truncate fupl-file-name\"></div>' +\n        '<div class=\"fupl-file-size\"></div>' +\n      '</div>' +\n      '<div class=\"fupl-extra-fields\"></div>' +\n      '<div class=\"fupl-sortable-icon\"></div>' +\n    '</div>',\n\n  template_doc_item_single: '<div class=\"fupl-item\">' +\n    '<div class=\"fupl-doc-wrapper\">' +\n      '<div class=\"fupl-remove\"></div>' +\n      '<div class=\"fupl-doc text-truncate\">' +\n        '<a class=\"text-truncate fupl-file-name fupl-url\" draggable=\"false\"></a>' +\n      '</div>' +\n    '</div>' +\n    '<div class=\"small ml-1 text-nowrap fupl-file-size\"></div>' +\n    '<div class=\"fupl-extra-fields\"></div>' +\n    '<div class=\"fupl-sortable-icon\"></div>' +\n  '</div>',\n\n  template_doc_item_multiple: null, // uses single doc templates\n\n  // Extra classes to be added to the FileUploader wrapper element (classes names separated by spaces)\n  wrapper_extra_class: null,\n\n  // Class(es) to be added to the FileUploader element when a file is dragged there from desktop\n  element_dragover_class: 'fupl-is-dragover',\n\n  // If true a legend tag will be added inside the the FileUploader wrapper (fieldset)\n  // It will be filled with the text of the label of the input[file] tag (if present)\n  // or with the uploader_legend_text parameter content\n  uploader_legend: true,\n\n  // Text of legend element (alternative to original label text)\n  uploader_legend_text: null,\n\n  // Class to be added to uploader_legend element\n  uploader_legend_class: null,\n\n  // classes to be added to the label of the generated nput[file] tag\n  input_label_class: 'btn btn-outline-primary btn-sm',\n\n  // show the information text on accepted formats, image size, etc.\n  show_info_text: true,\n\n  // show images optimization tips\n  show_optimize_info: true,\n\n  // strings added to the beginning and end of the generated info text\n  info_text_wrap_string: ['(', ')'],\n\n  // String used to join the various parts of the generated info text\n  info_text_join_string: ' - ',\n\n  // Custom info text. If present, replaces the generated info text\n  custom_info_text: null,\n\n  // help text. If present, is added after the info_text or custom_info_text\n  help_text: null,\n\n  /*\n    Images settings (only for filetype == 'img')\n\n    Numeric values that correspond to the pixel dimensions required for the image.\n    The img_min_* and img_max_* parameters can be assigned simultaneously,\n    but they are ignored if the corresponding exact parameters exist\n    (for example, if img_w is present, the parameters img_min_w and img_max_w\n    or img_aspect_ratio are not taken into consideration).\n    The default value of all parameters is null, which means that they are not applied.\n    Aspect ratio must be a number or string in w/h or w:h format or the result of w/h division.\n    Aspect ratio values are rounded to three decimal places\n\n      * `img_w`            : exact image width\n      * `img_h`            : exact image height\n      * `img_min_w`        : min image width\n      * `img_min_h`        : min image height\n      * `img_max_w`        : max image width\n      * `img_max_h`        : max image height\n      * `img_aspect_ratio` : aspect ratio w/h value (16/9, 4:3, 0.5, ecc)\n  */\n  img_w            : null,\n  img_h            : null,\n  img_min_w        : null,\n  img_min_h        : null,\n  img_max_w        : null,\n  img_max_h        : null,\n  img_aspect_ratio : null,\n\n  /*\n    Aspect Ratio accuracy.\n    It is a number that indicates the decimal numbers to which the image size\n    ratio will be rounded for comparison with the `img_aspect_ratio` parameter\n  */\n  aspect_ratio_accuracy: 2,\n\n  /*\n    Maximum size (weight) of the image. It can be a number,\n    and in this case it corresponds to a dimension in KB, or a string\n    composed of a numeric value and a suffix between ‘KB’ and ‘MB’ (also lowercase).\n    If the value is null or if the string is not recognized,\n    no limit is applied.\n  */\n  max_filesize: null,\n\n  /*\n    Prefix of the variable used to send the data to the server.\n    The value indicates the base name of the generated varname\n  */\n  varname: 'file',\n\n  /*\n    Prefix of the variable used to send the data to the server,\n    for extra fields of preregistered files only\n    (For compatibility with beta version)\n  */\n  registered_extra_field_varname: null,\n\n  /*\n    Function called after the initialization of each FileUploader element.\n    Function is invoked passing the complete `fupl` obj as argument\n  */\n  init_callback: null,\n\n  /*\n    Function called each time a file upload begins.\n    Function argument is an object that contains:\n      * `item`: current item object, it contains:\n          - `id`: element unique id\n          - `file`: current filelist object\n          - `width` and `height`: null or image dimensions (pixel)\n      * `img_preview` : base64 image preview (null if not an image)\n      * `fupl`: options & strings of current FileUploader instance\n  */\n  upload_start_callback: null,\n\n  /*\n    Function called each time a file has been uploaded.\n      Function argument is an object that contains:\n      * `item`: current item object, it contains:\n          - `id`: element unique id\n          - `file`: current filelist object\n          - `width` and `height`: null or image dimensions (pixel)\n          - `tmp_file`: name of temporary file saved on the server\n      * `server_error`: error message strimg (null if no error occurred)\n      * `fupl`: options & strings of current FileUploader instance\n  */\n  upload_complete_callback: null,\n\n  /*\n    Alternative upload progress function (see alternative_loading_element parameter)\n    If present, it replaces the standard one\n    Function argument is an object that contains:\n      - `progress_event`: upload progress event\n      - `fupl`: options & strings of current FileUploader instance\n  */\n  alternative_loading_func: null,\n\n  /*\n    JSON array of preregistered element:\n    [\n      {\n        rel_id → id of the record related to the file (it's facultative and can be null).\n                  It's usefully for many-to-many tables, and, if present,\n                  is the one provided to delete a file from the server\n        id     → unique id of the file (required)\n        name   → file name (required)\n        url    → url for <a> tag href attribute (if present) (facultative)\n        src    → image `src` attribute (required for images only)\n        wi     → image pixel width  (for images only)\n        he     → image pixel height  (for images only)\n        size   → bytes size\n        [...]  → extra fields, if present\n      }\n      [...]\n    ]\n  */\n  values: [],\n\n  // varname use for deleted file generated hidden fields\n  delete_varname: 'elimina_file[]',\n\n  /*\n    if true fancybox integration is activated for images\n    fancybox is not present in FileUploader, and must be loaded in the page\n    Furthermore, to activate this option, an `url` parameter must be provided\n    (see `values` option)\n  */\n  fancybox: false,\n\n  /*\n    markup of <a> tag to wrap image tags when fancybox option is active\n    if a `a.fupl-url` element is present in img templates string, this options\n    will not be used\n  */\n  fancybox_anchor_markup: '<a class=\"fupl-url\" data-fancybox=\"fupl-gallery\"></a>',\n\n  /*\n    optional function to be called after fancybox markup is applied\n    to all elements and after `init_callback`.\n    Function is invoked passing the complete `fupl_options` obj as argument\n  */\n  fancybox_callback_func: null,\n\n  // ========================================\n  // SORTABLE OPTIONS\n  // ========================================\n  /*\n    Enable the ability to rearrange items by dragging them.\n\n    This options adds one more hidden field for each file to the form, using the\n    `reorder_varname` parameter for generated varnames.\n\n    The reorder option is enabled if the reorder parameter is true, if\n    the multiple parameter is true and if the sortable_varname parameter is present\n\n    If the option is active, the values of any pre-recorded items\n    must be provided in the json `values` in the correct order\n\n    See `demo / reorder_demo.html` for a usage example\n  */\n  sortable: false,\n\n  /*\n    sortable hidden item varname\n    it will be combined with main varname to obtain a string like\n      varname[item_id][sortable_varname]\n  */\n  sortable_varname: 'fupl_order',\n\n  /*\n    markup for dragging icon\n    to be inserted in `.fupl-sortable-icon` element,\n    that must be present in the multiple item template\n  */\n  sortable_icon: '<div title=\"{{sortable_icon_title_text}}\"></div>',\n\n  // ========================================\n  // EXTRA FIELDS\n  // ========================================\n  /*\n    Markup to be added at the end of every uploaded item.\n    It is an array of objects each of which describes a field element:\n      [\n        {\n          \"value_key\": field key,\n          \"markup\": html string\n        },\n        ...\n      ]\n\n    * `value_key` identifies the field element and corresponds to the key used\n                  also in the values object.\n    * `use_rel_id` (default false), if true, and the `values` parameter contains the\n                    `rel_id` items, the `{{name}}` variable will be generated\n                    using `rel_id` instead of `id`.\n                    Only pre-registered items will be affected by this setting (since new items\n                    never have a `rel_id`).\n                    If `use_rel_id` is true but the `rel_id`  item doesn't exist,\n                    the `id`  will be used\n\n    * `markup` is a HTML string which contains some Mustache-like placeholder:\n      - `{{idx}}`         → unique id of the element\n      - `{{val}}`         → content of value attribute, it corresponds to\n                            `values[...][value_key]` value\n      - `{{checked}}`     → if `values[...][value_key]` exists and it's different from\n                            `0`, `null` or empty string, it is replaced with the `checked` attribute,\n                            otherwise, with an empty string\n      - `{{name}}`        → is replaced with a PHP name string formed by\n                                * the `varname` parameter\n                                * the unique id or rel_id (according to use_rel_id setting) of the element\n                                * the `value_key` string\n                            Example: `file[fupl_00001][caption]`\n\n    Take a look to `extra_fields_demo.html` for a working demo.\n  */\n  extra_fields: null\n};\n","export const fupl_utilities = {\n\n  /*\n    Mimetypes and extensions allowed according to `filetype` parameter\n    The `auto` parameter accepts all file types (except for limitations\n    added by `accept` parameter/attribute)\n  */\n  mimetypes: (() => {\n    let mimetypes = {\n      auto      : null,\n      img       : ['image/png', 'image/jpeg', 'image/pjpeg', 'image/gif', 'image/webp',\n        '.png', '.jpg', '.jpeg', '.pjpg', '.pjpeg', '.gif', '.webp'],\n      pdf       : ['application/pdf', '.pdf'],\n      svg       : ['image/svg+xml', '.svg', '.svgz']\n    };\n\n    mimetypes['img+svg'] = mimetypes['img'].concat(mimetypes['svg']);\n\n    return mimetypes;\n\n  })(),\n\n  /*\n    isSuitableBrowser\n    Check the browser\n    returns `true` or `false`\n  */\n  isSuitableBrowser: () => {\n    // IE\n    if( navigator.userAgent.indexOf('MSIE') !== -1 ||\n    navigator.appVersion.indexOf('Trident/') > -1 ||\n    navigator.userAgent.indexOf('Trident/') > -1 ){\n      return false;\n    }\n\n    var div = document.createElement( 'div' );\n    return ( ( 'draggable' in div ) || ( 'ondragstart' in div && 'ondrop' in div ) ) //TODO rimuovere ondragstart/ondrop (IE)?\n      && 'FormData' in window\n      && 'FileReader' in window\n      && 'fetch' in window;\n  },\n\n  set_has_values: fupl => {\n    let items = fupl.opts.instance_result_wrapper.querySelectorAll('.fupl-item').length;\n    fupl.opts.wrapper.dataset.hasValues = items? 'true' : 'false';\n    if(!items) {\n      fupl.opts.instance_result_wrapper.innerHTML = fupl.strs[`no_${fupl.opts._type}_text`];\n    }\n  },\n\n  parse_bytes_value: (bytes, locales) => {\n    bytes = +bytes;\n    let mega = 1024*1024;\n    if(bytes >= mega ) {\n      return (bytes/mega).toLocaleString(locales, {maximumFractionDigits: 1}) + '<span class=\"fupl-unit\">MB</span>';\n\n    } else if (bytes < 1024) {\n      return Number((bytes/1024).toFixed(2)).toLocaleString(locales, {maximumFractionDigits: 2}) +\n        '<span class=\"fupl-unit\">KB</span>';\n\n    } else {\n      return Math.round(bytes/1024).toLocaleString(locales, {maximumFractionDigits: 0}) +\n        '<span class=\"fupl-unit\">KB</span>';\n    }\n  },\n\n  /*\n   Parse the `max_filesize` parameter (if exists) and returns:\n    - `null` if max_filesize === null\n    - `false` if `max_filesize` is not a correct value\n    - the object `{ maxbytes: 123456, unit: 'KB', feedback_size: '1.2KB'}`\n    where\n      - `maxbytes` is max_filesize value in bytes\n      - `unit` is one of 'KB' and 'MB'\n      - `feedback_size` is a textual representation of max_filesize\n         for the purpose of providing end user informations\n  */\n  parse_max_filesize: (filesize_value, locales) =>  {\n    // max_filesize checking and parsing\n    if( filesize_value ) {\n      var maxbytes, unit, feedback_size;\n\n      if(!isNaN(filesize_value)) { //solo numero, si assume siano KB\n        maxbytes = +filesize_value;\n        unit = 'KB';\n        feedback_size = maxbytes;\n\n      } else {\n\n        unit = filesize_value.substr(-2, 2).toUpperCase();\n        maxbytes = +filesize_value.substr(0, filesize_value.length-2);\n        feedback_size = maxbytes;\n\n        if(isNaN(maxbytes) || (unit !== 'KB' && unit !== 'MB') ) {\n          return false;\n        }\n      }\n\n      // If unit is KB but value is bigger than 1MB,\n      // unit is changed\n      if( maxbytes >= 1024 && unit === 'KB') {\n        unit = 'MB';\n        feedback_size = (Math.round((maxbytes / 1024) * 100) /100);\n      }\n\n      if(unit === 'KB') {\n        maxbytes = maxbytes * 1024;\n      } else {\n        maxbytes = maxbytes * 1024 * 1024;\n      }\n\n      return {\n        //'original_value': filesize_value,\n        //'unit'         : unit,\n        'maxbytes'     : maxbytes,\n        'feedback_size': feedback_size.toLocaleString(\n          locales, {maximumFractionDigits: (unit === 'KB'? 0 : 1)}\n        ) + '<span class=\"fupl-unit\">' + unit + '</span>'\n      };\n\n    } else {\n      return null;\n    }\n  },\n\n  exec_callback: (callback_function, params) => {\n    try {\n      if(typeof callback_function === 'string') {\n\n        let cbk_func = window;\n        callback_function.split('.').forEach( function(item) {\n          cbk_func = cbk_func[item];\n        });\n        cbk_func(params);\n\n      } else {\n        callback_function(params);\n      }\n\n    } catch(error) {\n      alert(`Error: “${callback_function}” callback function doesn't exist`);\n      console.error(error); // eslint-disable-line\n    }\n  }\n\n};\n","/*\n  based on\n  - https://github.com/WolfgangKurz/grabbable\n\n  references:\n  - https://codepen.io/therealDaze/pen/ZaoErp\n  - https://github.com/gridstack/gridstack.js\n  - https://developer.mozilla.org/it/docs/Web/API/HTML_Drag_and_Drop_API\n  - https://www.html5rocks.com/en/tutorials/dnd/basics/\n  - https://kryogenix.org/code/browser/custom-drag-image.html\n  - http://jsfiddle.net/zfnj5rv4/\n*/\n\nlet dragged_element = null,\n  uploader_is_disabled = false;\n\nconst classes = {\n\n    // class added to the FileUploader elment (fupl_options.element)\n    // when a drag is started. It is removed at dragleave\n    sorting_class: 'fupl-sorting',\n\n    // same way, class added to the dragged element\n    sorting_item_class: 'fupl-item-sorting',\n\n    // class added to an item on dragover\n    over_item_class: 'fupl-item-dragover'\n  },\n\n  // broken events cleaning\n  resetAll = () => {\n\n    if( dragged_element ) {\n      dragged_element.classList.remove(classes.sorting_item_class);\n\n      dragged_element.parentNode.querySelectorAll('.' + classes.over_item_class).forEach(item => {\n        item.classList.remove(classes.over_item_class);\n      });\n\n      dragged_element.closest('.fupl').classList.remove(classes.sorting_class);\n    }\n\n    dragged_element = null;\n  };\n\nexport function add_sortable_events(fupl_item, fupl_options) {\n\n  // start dragging\n  fupl_item.addEventListener('dragstart', function(e) {\n    uploader_is_disabled = fupl_options.wrapper.disabled;\n    resetAll();\n    if(!uploader_is_disabled) {\n\n      dragged_element = this;\n\n      // `classes.sorting_class` is added to the dragged element\n      // this prevents the feedback triggered when external files are dropped\n      // in the broswer (look at scss/_fupl.scss)\n      fupl_options.element.classList.add(classes.sorting_class);\n\n      e.dataTransfer.effectAllowed = 'move';\n      e.dataTransfer.setData('text', 'fupl-sorting');\n\n      this.classList.add(classes.sorting_item_class);\n    }\n\n  }, false);\n\n  // enter positioning over another element (→ e.target == this)\n  fupl_item.addEventListener('dragenter', function(e) {\n\n    // disabled for external files or when the uploader is disabled\n    if( e.dataTransfer.getData('text') === 'fupl-sorting' && !uploader_is_disabled) {\n      if (e.stopPropagation) {\n        e.stopPropagation(); // stops the browser from redirecting.\n      }\n      if( this !== dragged_element ) {\n        this.classList.add(classes.over_item_class);\n      }\n    }\n\n  }, false);\n\n  // positioning over another element (→ e.target)\n  fupl_item.addEventListener('dragover', function(e) {\n    if( e.dataTransfer.getData('text') === 'fupl-sorting' && !uploader_is_disabled ) {\n\n      if (e.preventDefault) {\n        e.preventDefault();\n      }\n      e.dataTransfer.dropEffect = 'move';\n      if( this !== dragged_element ) {\n        this.classList.add(classes.over_item_class);\n      }\n    }\n\n    return false;\n  }, false);\n\n  // exit positioning over another element\n  fupl_item.addEventListener('dragleave', function() {\n\n    this.classList.remove(classes.over_item_class);\n  }, false);\n\n  // drop\n  fupl_item.addEventListener('drop', function(e) {\n    if( e.dataTransfer.getData('text') === 'fupl-sorting' && !uploader_is_disabled) {\n      if (e.stopPropagation) {\n        e.stopPropagation(); // stops the browser from redirecting.\n      }\n\n      e.preventDefault();\n\n      if(dragged_element) {\n        if(this.previousElementSibling === dragged_element && this.nextElementSibling ) {\n          this.parentNode.insertBefore(dragged_element, this.nextElementSibling);\n\n        } else if( this.nextElementSibling ) {\n          this.parentNode.insertBefore(dragged_element, this);\n\n        // if target element is the last one, the dropped one is positioned after it\n        } else {\n          this.parentNode.insertAdjacentElement('beforeend', dragged_element);\n        }\n      }\n      resetAll();\n    }\n\n    return false;\n\n  }, false);\n\n  // end dragging\n  fupl_item.addEventListener('dragend', function(e) {\n\n    if( e.dataTransfer.getData('text') === 'fupl-sorting' && !uploader_is_disabled) {\n      fupl_options.element.classList.remove(classes.sorting_class);\n      resetAll();\n\n      // order variable\n      fupl_options.instance_result_wrapper.querySelectorAll('.fupl-sortable-order').forEach((item,idx) => {\n        item.value = idx;\n      });\n    }\n\n  }, false);\n} // end add_sortable_events\n\n\nexport function activate_sortable(fupl_options) {\n\n  // class added to `fupl_options.instance_result_wrapper`\n  // when `sortable` option is activated\n  fupl_options.instance_result_wrapper.classList.add( 'fupl-sortable' );\n\n}\n","/*\n  Add an element to fupl.opts.instance_result_wrapper\n  and set all needed listeners\n\n  `item_data` obj contains all element data:\n    {\n      id      → file unique id (can be file path too)\n      name    → file name\n      url     → url for any <a> tag present in the element (if it is an image can be a null or not set)\n      src     → `src` attribute. Required if element is an image, otherwise null or not set\n      wi      → image px width (null or not set if not image)\n      he      → image px height (null or not set if not image)\n      size    → file size (bytes)\n      loading → `true` if it is an item being uploaded\n      ...     → any additional instance-specific fields\n    }\n\n  `fupl`                    : is the fupl object\n  `preregistered` === true  : means that the element was previously saved and comes\n                              from the `fupl.opts.values` array\n\n*/\n\nimport {fupl_utilities} from './_utilities.js';\nimport {add_sortable_events} from './_sortable.js';\n\nexport function create_item(item_data, fupl, preregistered = false) {\n\n  try {\n\n    let item_markup = fupl.opts[`template_${fupl.opts._type}_item_${fupl.opts._mode}`];\n    if( item_markup === null && fupl.opts._mode === 'multiple' ) {\n      item_markup = fupl.opts[`template_${fupl.opts._type}_item_single`];\n    }\n\n    let fupl_item_wrapper = document.createElement('div'); // wrapper to be removed after inserting\n    fupl_item_wrapper.innerHTML = item_markup;\n\n    // delete button\n    let fupl_remove = fupl_item_wrapper.querySelector('.fupl-remove');\n    if(fupl_remove) {\n      fupl_remove.innerHTML = fupl.opts.template_remove_btn\n        .replace(/{{remove_btn_text}}/g, fupl.strs.remove_btn_text);\n    }\n\n    /*\n      element data\n      ============================\n\n      each fupl-item element contains:\n        .fupl-file-name\n        .fupl-file-size\n        .fupl-img → img\n        .fupl-img → a.href\n        .fupl-doc → a.href\n\n    */\n\n    // file name\n    let fupl_file_name = fupl_item_wrapper.querySelector('.fupl-file-name');\n    if(fupl_file_name && item_data.name ) {\n      fupl_file_name.innerHTML = item_data.name;\n      fupl_file_name.title = item_data.name;\n    }\n\n    // size info\n    let fupl_file_size = fupl_item_wrapper.querySelector('.fupl-file-size');\n    if(fupl_file_size ) {\n      let size_string = '';\n      if(fupl.opts._type === 'img' && item_data.wi && item_data.he) {\n        size_string = item_data.wi + '&times;' + item_data.he + '<span class=\"fupl-unit\">px</span>';\n        if(item_data.size) {\n          size_string += ' &ndash; ';\n        }\n      }\n      if(item_data.size) {\n        size_string += fupl_utilities.parse_bytes_value(item_data.size, fupl.opts.locales);\n      }\n\n      fupl_file_size.innerHTML = size_string;\n    }\n\n    // image\n    if( fupl.opts._type === 'img' ) {\n      fupl_item_wrapper.querySelector('.fupl-img').src = item_data.src;\n    }\n\n    // url\n    let fupl_url = fupl_item_wrapper.querySelector('.fupl-url');\n    if( fupl_url && item_data.url) {\n      fupl_url.href = item_data.url;\n    }\n\n    let fupl_item = fupl_item_wrapper.querySelector('.fupl-item');\n\n\n    if(item_data.loading) {\n      fupl_item.classList.add('fupl-is-uploading');\n      fupl_item.insertAdjacentHTML('beforeend',\n        fupl.opts.template_loading_element\n      );\n    }\n\n    if(fupl.opts._mode === 'single') {\n      fupl.opts.instance_result_wrapper.innerHTML = fupl_item_wrapper.innerHTML;\n    } else {\n\n      // instance_result_wrapper cleaning (to remove 'no file' string, if present)\n      if( !fupl.opts.instance_result_wrapper.querySelector('.fupl-item')) {\n        fupl.opts.instance_result_wrapper.innerHTML = '';\n      }\n\n      fupl.opts.instance_result_wrapper.insertAdjacentHTML('beforeend',\n        fupl_item_wrapper.innerHTML\n      );\n    }\n\n\n    let fupl_item_dom = fupl.opts.instance_result_wrapper.querySelector('.fupl-item:last-child');\n    fupl_item_dom.dataset.id = item_data.id;\n\n    // remove element listener\n    let fupl_remove_trigger = fupl_item_dom.querySelector('.fupl-remove-trigger');\n    if(fupl_remove_trigger) {\n      fupl_remove_trigger.addEventListener('click', () => {\n        fupl_item_dom.remove();\n\n        let prereg_id = item_data.rel_id? item_data.rel_id : item_data.id;\n\n        if(prereg_id && preregistered) {\n          fupl.opts.wrapper.insertAdjacentHTML('beforeend',\n            `<input type=\"hidden\" name=\"${fupl.opts.delete_varname}\" value=\"${prereg_id}\">`\n          );\n        }\n\n        // controllo se instance_result_wrapper è vuoto\n        // e impostazione di attributo e contenuti\n        fupl_utilities.set_has_values(fupl);\n\n      });\n    }\n\n    //fancybox integration\n    if( fupl.opts.fancybox && fupl.opts._type === 'img' && item_data.url && fupl.opts.fancybox_anchor_markup) {\n      // check for `a.fupl-url` tag and add it if necessary\n      if( !fupl_item_dom.querySelector('a.fupl-url') ) {\n\n        let img_element = fupl_item_dom.querySelector('.fupl-img'),\n          fancybox_wrapper = document.createElement('div');\n        fancybox_wrapper.innerHTML = fupl.opts.fancybox_anchor_markup;\n\n        fancybox_wrapper = fancybox_wrapper.firstChild;\n        img_element.parentNode.insertBefore(fancybox_wrapper, img_element);\n        fancybox_wrapper.appendChild(img_element);\n      }\n\n      fupl_item_dom.querySelector('a.fupl-url').setAttribute('href', item_data.url);\n\n    }\n\n    // extra fields\n    let extra_fields_wrapper = fupl_item_dom.querySelector('.fupl-extra-fields');\n    if(fupl.opts.extra_fields !== null && extra_fields_wrapper) {\n\n      fupl.opts.extra_fields.forEach( item => {\n        extra_fields_wrapper.insertAdjacentHTML('beforeend',\n          item.markup.replace(/{{idx}}/g, item_data.id)\n            .replace(/{{val}}/g, preregistered && item_data[item.value_key]? item_data[item.value_key] : '')\n            .replace(/{{checked}}/g, preregistered && +item_data[item.value_key]? 'checked' : '')\n            .replace(/{{name}}/g,\n              (preregistered && fupl.opts.registered_extra_field_varname?\n                fupl.opts.registered_extra_field_varname : fupl.opts.varname) +\n              '[' +\n              ((item.use_rel_id && item_data.rel_id)? item_data.rel_id : item_data.id) +\n              '][' + item.value_key + ']'\n            )\n        );\n      });\n\n      // stop bubbling when sortable\n      if( fupl.opts.sortable ) {\n        extra_fields_wrapper.querySelectorAll('select, input, textarea').forEach(item => {\n          item.setAttribute('draggable', 'false');\n          ['dragstart', 'drag', 'mousedown'].forEach( ev => {\n            item.addEventListener(ev, e => {\n              if(ev !== 'mousedown') {e.preventDefault();}\n              e.stopPropagation();\n            });\n          });\n        });\n      }\n    }\n\n    // sortable\n    if( fupl.opts.sortable ) {\n      fupl_item_dom.setAttribute('draggable', true);\n\n      // order_value starts from zero\n      let order_value = fupl.opts.instance_result_wrapper.querySelectorAll('.fupl-item').length -1;\n\n      fupl_item_dom.insertAdjacentHTML('beforeend',\n        '<input type=\"hidden\" class=\"fupl-sortable-order\" name=\"' +\n            (preregistered && fupl.opts.registered_extra_field_varname?\n              fupl.opts.registered_extra_field_varname :\n              fupl.opts.varname) +\n            `[${item_data.id}][${fupl.opts.sortable_varname}]\" value=\"${order_value}\">`\n      );\n\n      if(fupl.opts.sortable_icon) {\n        fupl_item_dom.querySelector('.fupl-sortable-icon').innerHTML =\n          fupl.opts.sortable_icon\n            .replace('{{sortable_icon_title_text}}', fupl.strs.sortable_icon_title_text);\n      }\n      add_sortable_events(fupl_item_dom, fupl.opts);\n    }\n\n    return fupl.opts.instance_result_wrapper.querySelector('.fupl-item:last-child');\n\n  } catch(e) {\n    console.error(e); // eslint-disable-line\n  }\n\n}\n","/*\nPerforms all the checks, calls the remote url via ajax\nand generates the feedback for the user\n*/\n\nimport {create_item} from './_create_item.js';\nimport {fupl_utilities} from './_utilities.js';\nimport {build_hidden_fields} from './_build_hidden_fields.js';\n\nexport function send_files(filelist, fupl) {\n\n  // disable the form submit button until the upload is completed\n  const disable_submit = (mode) => {\n      // mode === true → disable, false → enable\n      const _form = fupl.opts.element.closest('form');\n\n      if(fupl.opts.disable_submit && _form) {\n        const submit_btns = _form.querySelectorAll('[type=\"submit\"]');\n\n        submit_btns.forEach( btn => {\n          btn.disabled = mode;\n        });\n\n        // TODO: removeEventListener doesn't work\n        // const submitHandler = (e) => {\n        //   e.preventDefault();\n        //   //return false;\n        // };\n        // if(mode === true) {\n        //   _form.addEventListener('submit', submitHandler, false);\n        // } else {\n        //   if( !fupl.opts.instance_result_wrapper.querySelector('.fupl-item.fupl-is-uploading')) {\n        //     _form.removeEventListener('submit', submitHandler, false);\n        //   }\n        // }\n      }\n    },\n\n    /*\n    uploadFile\n    ajax upload\n    https://www.smashingmagazine.com/2018/01/drag-drop-file-uploader-vanilla-js/\n\n    current_item contains:\n      - `id`: element unique id\n      - `file`: filelist obj\n      - `width` e height: image pixel sizes. null if not an image\n      - `tmp_file`: temporary server file name (new uplaods only)\n\n    */\n    uploadFile = function ( current_item, img_preview ) {\n\n      // disabling form\n      disable_submit(true);\n\n      // aggiunta elemento all'uploader\n      let this_item = create_item({\n          id       : current_item.id,\n          name     : current_item.file.name,\n          url      : null,\n          src      : img_preview,\n          wi       : current_item.width,\n          he       : current_item.height,\n          size     : current_item.file.size,\n          img_type : current_item.file.img_type,\n          loading  : true\n        }, fupl),\n\n\n        fupl_progress= this_item.querySelector('.fupl-progress'),\n        fupl_loading_wrapper = this_item.querySelector('.fupl-loading'),\n\n        xhr_error_message = fupl.strs.alert_xhr_error.replace(/{{file_name}}/, current_item.file.name);\n\n      //console.log(this_item); // eslint-disable-line\n\n      const remove_item_on_error = () => {\n        this_item.querySelector('.fupl-remove-trigger').click();\n      };\n\n      // custom callback function\n      if( fupl.opts.upload_start_callback ) {\n        fupl_utilities.exec_callback(fupl.opts.upload_start_callback, {\n          item              : current_item,\n          img_preview       : img_preview,\n          uploader_options  : fupl\n        });\n      }\n\n      new Promise(function(resolve, reject) {\n        let ajax = new XMLHttpRequest();\n        ajax.open( fupl.opts.ajax_method, fupl.opts.uploader_url, true );\n\n        ajax.onload = function() {\n\n          if( ajax.status >= 200 && ajax.status < 400 ) {\n\n            const response = JSON.parse( ajax.responseText );\n\n            /*\n            jsonResponse:\n              {\n                \"tmp_file\": \"temp_file_name\",\n                \"error\": null\n              }\n            */\n            if(response.error) {\n\n              fupl.opts.alert_api( xhr_error_message, fupl );\n              console.error( response.error ); // eslint-disable-line\n              reject();\n\n            } else {\n              current_item.tmp_file = response.tmp_file;\n              resolve();\n            }\n\n            // custom callback function\n            if( fupl.opts.upload_complete_callback ) {\n              fupl_utilities.exec_callback(fupl.opts.upload_complete_callback, {\n                item          : current_item,\n                server_error  : response.error,\n                fupl          : fupl\n              });\n            }\n\n            if(fupl.opts.debug) {\n              /* eslint-disable */\n              console.groupCollapsed(`FileUploader ${fupl.opts._vers} ajax response`);\n              console.log(response);\n              console.groupEnd();\n              /* eslint-enable */\n            }\n\n          } else {\n            fupl.opts.alert_api( xhr_error_message, fupl );\n            /* eslint-disable */\n            console.error( ajax.status, ajax.statusText );\n            console.error( ajax.responseText );\n            /* eslint-enable */\n          }\n\n          reject();\n        };\n\n        ajax.onerror = function() {\n          fupl.opts.alert_api( xhr_error_message, fupl );\n          /* eslint-disable */\n          if(fupl.opts.debug) {\n            console.error( ajax.status,  ajax.statusText );\n            console.error( ajax.responseText );\n          }\n          /* eslint-enable */\n\n          reject();\n        };\n\n        ajax.upload.addEventListener('progress', function (e) {\n          if( fupl.opts.alternative_loading_func ) {\n\n            fupl_utilities.exec_callback(fupl.opts.alternative_loading_func, ...[e, fupl]);\n\n          } else {\n            let perc_loaded = Math.round(e.loaded / e.total * 100.0) || 0;\n\n            //console.log(e.loaded ,e.total, perc_loaded); // eslint-disable-line\n            if(fupl_progress) {\n              if(e.lengthComputable) {\n                perc_loaded = perc_loaded === Infinity? 100 : perc_loaded;\n                this_item.querySelector('.fupl-progress').value = perc_loaded;\n              } else {\n                fupl_loading_wrapper.innerHTML = fupl.opts.template_alternative_loading_element;\n                fupl_progress = null;\n              }\n            }\n          }\n        }, false);\n\n\n        let fileData = new FormData();\n        fileData.append('file', current_item.file);\n        ajax.send( fileData );\n      }) // end promise\n        .then(\n          // resolve\n          function (  ) {\n            //console.log('resolve'); // eslint-disable-line\n            this_item.classList.remove('fupl-is-uploading');\n            this_item.querySelector('.fupl-loading').remove(); // elemento loading\n\n            this_item.insertAdjacentHTML('beforeend',\n\n              build_hidden_fields(current_item, fupl.opts)\n            );\n\n            fupl_utilities.set_has_values(fupl);\n\n            // restoring submit\n            disable_submit(false);\n\n          },\n          //reject\n          function (  ) {\n            //console.log('reject'); // eslint-disable-line\n            remove_item_on_error();\n            fupl_utilities.set_has_values(fupl);\n          }\n        );\n\n    };\n\n  if( filelist.length ) {\n\n    // https://stackoverflow.com/questions/38362231/\n    // how-to-use-promise-in-foreach-loop-of-array-to-populate-an-object\n    [...filelist].forEach(function (filelist_item, idx) {\n      try {\n\n        let current_item = {\n          id: 'fupl_item_' + Date.now() + '_' + idx, // id unico\n          file: filelist_item,\n          width: null,\n          height: null,\n          tmp_file: null,\n          img_type: fupl.opts._type === 'img'?\n            (filelist_item.type === 'image/svg+xml' ? 'svg' : 'bmp') : null\n        };\n\n        // filetype check (for drag & drop and browsers that don't support accept)\n        if( fupl.opts.accept.length ) {\n          let ext = filelist_item.name.split('.').pop().toLowerCase();\n          if( fupl.opts.accept.indexOf( filelist_item.type ) === -1 &&\n            fupl.opts.accept.indexOf( '.' + ext ) === -1) {\n\n            throw fupl.strs.alert_file_format_error\n              .replace(/{{file_name}}/, filelist_item.name );\n          }\n        } // end filetype check\n\n        // maxfilesize check\n        if( fupl.opts.max_filesize !== null ) {\n          if( filelist_item.size > fupl.opts.max_filesize.maxbytes ) {\n            let item_parsed_size = fupl_utilities.parse_bytes_value(filelist_item.size, fupl.opts.locales);\n\n            throw fupl.strs.alert_file_size_error\n              .replace(/{{file_name}}/, filelist_item.name )\n              .replace(/{{file_size}}/, item_parsed_size )\n              .replace(/{{allowed_size}}/, fupl.opts.max_filesize.feedback_size );\n          }\n        } // end maxfilesize check\n\n        // images\n        if( fupl.opts._type === 'img') {\n          let reader  = new FileReader();\n          reader.addEventListener('load', function () {\n\n            let image = new Image();\n            image.src = reader.result;\n            image.addEventListener('load', function () {\n\n              let err_mes = [];\n              current_item.width=image.width;\n              current_item.height=image.height;\n              if(current_item.img_type === 'bmp') {\n                if( fupl.opts.img_w && image.width !== fupl.opts.img_w ) {\n                  err_mes.push(\n                    fupl.strs.alert_img_exact_width_err\n                      .replace(/{{image_dimension}}/, image.width)\n                      .replace(/{{allowed_dimension}}/, fupl.opts.img_w)\n                  );\n\n                } else if(fupl.opts.img_min_w && image.width < fupl.opts.img_min_w) {\n                  err_mes.push(\n                    fupl.strs.alert_img_min_width_err\n                      .replace(/{{image_dimension}}/, image.width)\n                      .replace(/{{allowed_dimension}}/, fupl.opts.img_min_w)\n                  );\n\n                } else if(fupl.opts.img_max_w && image.width > fupl.opts.img_max_w) {\n                  err_mes.push(\n                    fupl.strs.alert_img_max_width_err\n                      .replace(/{{image_dimension}}/, image.width)\n                      .replace(/{{allowed_dimension}}/, fupl.opts.img_max_w)\n                  );\n                }\n\n                if (fupl.opts.img_h && image.height !== fupl.opts.img_h) {\n                  err_mes.push(\n                    fupl.strs.alert_img_exact_height_err\n                      .replace(/{{image_dimension}}/, image.height)\n                      .replace(/{{allowed_dimension}}/, fupl.opts.img_h)\n                  );\n\n                } else if(fupl.opts.img_min_h && image.height < fupl.opts.img_min_h) {\n                  err_mes.push(\n                    fupl.strs.alert_img_min_height_err\n                      .replace(/{{image_dimension}}/, image.height)\n                      .replace(/{{allowed_dimension}}/, fupl.opts.img_min_h)\n                  );\n\n                } else if(fupl.opts.img_max_h && image.height > fupl.opts.img_max_h) {\n                  err_mes.push(\n                    fupl.strs.alert_img_max_height_err\n                      .replace(/{{image_dimension}}/, image.height)\n                      .replace(/{{allowed_dimension}}/, fupl.opts.img_max_h)\n                  );\n\n                }\n              }\n\n              // aspect ratio\n              if(fupl.opts.parsed_img_aspect_ratio) {\n                let img_ratio = Math.round(((image.width / image.height) + Number.EPSILON) * fupl.opts.aspect_ratio_accuracy) / fupl.opts.aspect_ratio_accuracy;\n                if(img_ratio !== fupl.opts.parsed_img_aspect_ratio) {\n                  err_mes.push(\n                    fupl.strs.alert_img_ratio_err\n                      .replace(/{{aspect_ratio}}/, fupl.opts.img_aspect_ratio)\n                  );\n                }\n              }\n\n              if( err_mes.length ) {\n                fupl.opts.alert_api(\n                  fupl.strs.alert_img_err_start_string\n                    .replace(/{{file_name}}/, filelist_item.name ) + '<br>\\n' +\n                  '<ul><li>' + err_mes.join('</li>\\n<li>') + '</li></ul>',\n                  fupl );\n\n              } else {\n                uploadFile( current_item, reader.result );\n              }\n\n            }, false); // end image.addEventListener(\"load\"\n\n          }, false); // end reader.addEventListener(\"load\"\n\n          reader.readAsDataURL( filelist_item );\n\n          // } else if(current_item.img_type === 'svg') { // svg\n\n          //   let reader = new FileReader();\n\n          //   reader.addEventListener('load', () => {\n\n          //     let image = new Image();\n          //     image.src = reader.result;\n\n          //     image.addEventListener('load', function () {\n          //       current_item.width=image.width;\n          //       current_item.height=image.height;\n          //     });\n\n          //     uploadFile( current_item,\n          //       reader.result\n          //       //'data:image/svg+xml;base64,' +  window.btoa(event.target.result)\n          //     );\n          //   });\n          //   reader.readAsDataURL(filelist_item);\n\n        } else { // not image\n          uploadFile( current_item );\n\n        } // end if image\n\n      } catch (errormessage) {\n        fupl.opts.alert_api( errormessage, fupl ,'error');\n      }\n    }); // end foreach\n\n  } // end if( filelist.length )\n\n}\n","/*\nGenerate hidden fields with values to be sent to server\nReturns the hidden fields html string\n*/\nexport function build_hidden_fields(current_item, fupl_options) {\n\n  // normalize ascii chars > 127 (and more)\n  const normalize_file_name = filename => {\n    let converted = '';\n    const std_char = '-', // char for standrd substitutions\n      conversionTable = { // Reference table Unicode vs ASCII\n        'à' : 'a', // 224\n        'è' : 'e', // 232\n        'é' : 'e', // 233\n        'ì' : 'i', // 236\n        'ò' : 'o', // 242\n        'ù' : 'u', // 249\n        'À' : 'A', // 192\n        'È' : 'E', // 200\n        'É' : 'E', // 201\n        'Ì' : 'I', // 204\n        'Ò' : 'O', // 210\n        'Ù' : 'U', // 217\n        '\\'' : std_char, // 39\n        '|' : std_char, // 124\n        '!' : std_char, // 33\n        '\"' : std_char, // 34\n        '$' : std_char, // 36\n        '%' : std_char, // 37\n        '&' : std_char, // 38\n        '/' : std_char, // 47\n        '(' : std_char, // 40\n        ')' : std_char, // 41\n        '=' : std_char, // 61\n        '?' : std_char, // 63\n        '^' : std_char, // 94\n        '*' : std_char, // 42\n        '[' : std_char, // 91\n        ']' : std_char, // 93\n        'ç' : 'c', // 231\n        '@' : std_char, // 64\n        '#' : std_char, // 35\n        '<' : std_char, // 60\n        '>' : std_char, // 62\n        'ü' : 'u', // 252\n        'Ü' : 'U', // 220\n        'ñ' : 'n', // 241\n        'Ñ' : 'N', // 209\n        '~' : std_char, // 126\n        ':' : std_char,\n        '\\\\' : std_char\n      };\n\n    for(var i = 0; i < filename.length; i++) {\n      if( filename[i] in conversionTable) {\n        converted += conversionTable[filename[i]];\n\n      } else if(filename.charCodeAt(i) === 768 || filename.charCodeAt(i) === 769 ) { // accento grave e accento acuto\n        converted += '';\n\n      } else if(filename.charCodeAt(i) > 127 ) {\n        converted += std_char;\n\n      } else {\n        converted += filename.charAt(i);\n      }\n    }\n\n    return converted.replace(/ /g, std_char)\n      .replace(new RegExp(`^${std_char}+`), '')\n      .replace(new RegExp(`${std_char}+`,'g'), std_char);\n  };\n\n  let hidden_fields = '',\n    field_values = {\n      'tmp_file'  : current_item.tmp_file,\n      'file_name' : normalize_file_name(current_item.file.name),\n      'size'      : current_item.file.size,\n      'type'      : current_item.file.type\n    };\n\n  if(fupl_options._type === 'img') {\n    field_values.width = current_item.width;\n    field_values.height = current_item.height;\n  }\n  for (let _key in field_values) {\n    hidden_fields += '<input type=\"hidden\" '+\n      'name=\"' + fupl_options.varname + '[' + current_item.id +'][' + _key + ']\" '+\n      'value=\"' + ((field_values[_key] !== null && field_values[_key] !== undefined)? field_values[_key] : '') +'\">';\n  }\n\n  return '<div class=\"fupl-hiddens\">' + hidden_fields + '</div>';\n\n}\n","import {fupl_utilities} from './_utilities.js';\nimport {create_info_text} from './_create_info_text.js';\nimport {activate_sortable} from './_sortable.js';\nimport {create_item} from './_create_item.js';\nimport {set_listeners} from './_set_listeners.js';\n\nexport function createUploader(fupl) {\n\n  try {\n\n    // check for input[file] and label elements\n    let _input = fupl.opts.element.querySelector('input[type=\"file\"]'),\n      original_label = fupl.opts.element.querySelector('label');\n\n    // parsing `accept` parameter and attribute, if exist\n    if( fupl.opts.filetype === 'auto' ) {\n\n      let accept_attr = [],\n        accept_params = [];\n\n      if( fupl.opts.accept !== null ) {\n        accept_params = fupl.opts.accept\n          .split(',').map( item => item.trim() );\n      }\n\n      if(_input && _input.getAttribute('accept') ) {\n        accept_attr = _input.getAttribute('accept')\n          .split(',').map( item => item.trim() );\n      }\n\n      // https://www.peterbe.com/plog/merge-two-arrays-without-duplicates-in-javascript\n      fupl.opts.accept = [...new Set([...accept_params, ...accept_attr])];\n\n    } else {\n      fupl.opts.accept = fupl_utilities.mimetypes[fupl.opts.filetype];\n    }\n\n    // `max_filesize` parsing\n    let max_filesize = fupl_utilities.parse_max_filesize(fupl.opts.max_filesize, fupl.opts.locales);\n    if( max_filesize === false ) {\n      throw new Error( `FileUploader: incorrect value for “max_filesize” parameter (${fupl.opts.max_filesize})`);\n    } else {\n      fupl.opts.max_filesize = max_filesize;\n    }\n\n    // `multiple` parameter or attribute\n    fupl.opts.multiple = Boolean(fupl.opts.multiple || (_input && _input.hasAttribute('multiple') ));\n\n    // `required` parameter or attribute\n    fupl.opts.required = Boolean(fupl.opts.required || (_input && _input.hasAttribute('required') ));\n\n    // `disabled` parameter or attribute\n    fupl.opts.disabled = Boolean(fupl.opts.disabled || (_input && _input.hasAttribute('disabled') ));\n\n\n    // uploader mode and type\n    fupl.opts._type = ['img', 'svg', 'img+svg'].indexOf(fupl.opts.filetype) !== -1? 'img' : 'doc';\n    fupl.opts._mode = fupl.opts.multiple? 'multiple' : 'single';\n\n    // label text (from element of `uploader_legend_text` parameter)\n    if( !fupl.opts.uploader_legend_text && original_label) {\n      fupl.opts.uploader_legend_text = original_label.innerHTML;\n    }\n    // label not set\n    if ( !fupl.opts.uploader_legend_text ) {\n      fupl.opts.uploader_legend_text = '__legend__';\n    }\n\n    // main class is added to FileUploader element\n    fupl.opts.element.classList.add('fupl');\n\n    // wrapper\n    fupl.opts.wrapper = document.createElement('fieldset');\n    fupl.opts.element.parentNode.insertBefore(fupl.opts.wrapper, fupl.opts.element);\n    fupl.opts.wrapper.appendChild(fupl.opts.element);\n    fupl.opts.wrapper.classList.add('fupl-wrapper');\n    fupl.opts.wrapper.classList.add('fupl-type-' + fupl.opts._type );\n    if(fupl.opts.multiple) {\n      fupl.opts.wrapper.classList.add('fupl-multiple');\n    }\n    // custom classes\n    if( fupl.opts.wrapper_extra_class ) {\n      fupl.opts.wrapper.classList.add( ...fupl.opts.wrapper_extra_class.split(' ') );\n    }\n\n    // uploader legend\n    if( fupl.opts.uploader_legend ) {\n      let _class = ['fupl-legend'];\n      if( fupl.opts.uploader_legend_class ) {\n        _class.push(fupl.opts.uploader_legend_class);\n      }\n      if( fupl.opts.required ) {\n        _class.push('required');\n      }\n\n      fupl.opts.element.insertAdjacentHTML('beforebegin',\n        '<legend' + (_class.length? ' class=\"' + _class.join(' ') + '\"' : '') + '>' +\n          fupl.opts.uploader_legend_text +\n        '</legend>'\n      );\n      fupl.opts.wrapper.classList.add( 'fupl-has-legend' );\n    }\n\n    if(fupl.opts.help_text) {\n      fupl.opts.element.insertAdjacentHTML('beforebegin',\n        `<div class=\"fupl-help-text\">${fupl.opts.help_text}</div>`\n      );\n    }\n\n    // uploader template\n    fupl.opts.element.innerHTML = fupl.opts.template_main;\n\n    fupl.opts.instance_input = fupl.opts.element.querySelector('.fupl-panel input[type=\"file\"]');\n    fupl.opts.instance_label = fupl.opts.element.querySelector('.fupl-panel label');\n    fupl.opts.instance_dd_text = fupl.opts.element.querySelector('.fupl-panel .fupl-dd-text');\n    fupl.opts.instance_info_text = fupl.opts.element.querySelector('.fupl-panel .fupl-info-text');\n    fupl.opts.instance_result_wrapper = fupl.opts.element.querySelector('.fupl-result');\n\n\n    // inserting text and attributes\n    // if( fupl.opts.required ) {\n    //   fupl.opts.instance_input.setAttribute('required', '');\n    // }\n    if( fupl.opts.multiple ) {\n      fupl.opts.instance_input.setAttribute('multiple', '');\n    }\n    if( fupl.opts.accept !== null ) {\n      fupl.opts.instance_input.setAttribute('accept', fupl.opts.accept.join(','));\n    }\n\n    // adding data-required attribute to wrapper\n    if( fupl.opts.required ) {\n      fupl.opts.wrapper.dataset.required = 'true';\n    }\n\n    // adding data-disabled attribute to wrapper\n    if( fupl.opts.disabled ) {\n      fupl.opts.wrapper.setAttribute('disabled', true);\n      fupl.opts.wrapper.setAttribute('aria-disabled', true);\n    }\n\n\n    fupl.opts.instance_label.insertAdjacentHTML('beforeend',\n      fupl.strs[`${fupl.opts._type}_${fupl.opts._mode}_select_text`]\n    );\n    if(fupl.opts.input_label_class) {\n      fupl.opts.instance_label.classList.add(...fupl.opts.input_label_class.split(' '));\n    }\n    fupl.opts.instance_dd_text.innerHTML = fupl.strs[`${fupl.opts._type}_${fupl.opts._mode}_drag_text`];\n\n\n\n    // info text\n    if( fupl.opts.show_info_text ) {\n      if(fupl.opts.custom_info_text) {\n        fupl.opts.instance_info_text.innerHTML = fupl.opts.custom_info_text;\n      } else {\n        fupl.opts.instance_info_text.innerHTML = create_info_text(fupl);\n      }\n    }\n\n\n    // Sortable\n    if( fupl.opts.sortable) {\n      if( fupl.opts.multiple && fupl.opts.sortable_varname ) {\n\n        activate_sortable(fupl.opts);\n\n      } else {\n        throw new Error('FileUploader: incorrect “sortable” settings:\\n' +\n          `\"sortable\": ${fupl.opts.sortable? 'true' : 'false'}\\n` +\n          `\"multiple\": ${fupl.opts.multiple? 'true' : 'false'}\\n` +\n          `\"sortable_varname\": \"${fupl.opts.sortable_varname}\"`\n        );\n      }\n\n    }\n\n    // adding registered values\n    // fupl.opts.values must be an array of objects\n    // if it is a single object, it is wrapped in an array\n    if(fupl.opts.values) {\n      if(typeof fupl.opts.values === 'object') {\n        if(!Array.isArray(fupl.opts.values)) {\n          fupl.opts.values = [fupl.opts.values];\n        }\n      } else {\n        throw new Error('FileUploader: incorrect “values” parameter');\n      }\n    }\n\n    if( fupl.opts.values && fupl.opts.values.length ) {\n\n      fupl.opts.values.forEach( item => {\n        create_item(item, fupl, true); // true means that the element comes from the server\n      });\n\n    }\n    fupl_utilities.set_has_values(fupl);\n\n    // gestione aggiunta nuovi elementi\n    set_listeners(fupl);\n\n\n    // calling init_callback, if present\n    if( fupl.opts.init_callback !== null ) {\n      fupl_utilities.exec_callback(fupl.opts.init_callback, fupl);\n    }\n\n    // calling fancybox_callback_func, if present\n    if( fupl.opts.fancybox && fupl.opts.fancybox_callback_func !== null ) {\n      fupl_utilities.exec_callback(fupl.opts.fancybox_callback_func, fupl.opts);\n    }\n\n    //debug\n    if( fupl.opts.debug ) {\n      /* eslint-disable */\n\n      const sorted_options= Object.keys(fupl.opts).sort()\n        .reduce((result, key) => ( result[key] = fupl.opts[key], result), {} );\n\n      //fupl.opts is exposed as global object for debug purposes\n      if(window.fileUploderOpts === undefined) {\n        window.fileUploderOpts = {};\n      }\n      window.fileUploderOpts[fupl.opts.varname] = sorted_options;\n\n      console.groupCollapsed(`FileUploader ${fupl.opts._vers} options`);\n        console.log(sorted_options);\n      console.groupEnd();\n\n      /* eslint-enable */\n    } // end if debug\n\n  } catch(e) { //throw \"error\"\n    console.error( e ); // eslint-disable-line\n  } // finally {}\n\n} // end createUploader\n\n","/**\n * create_info_text\n * Creates a string of information about the file requirements\n *\n */\n\nexport function create_info_text(fupl) {\n\n  let info_text = [];\n\n  switch (fupl.opts.filetype) {\n    case 'img':\n      info_text.push( fupl.strs.info_text_std_imgs );\n      break;\n\n    case 'img+svg':\n      info_text.push( fupl.strs.info_text_imgs_svg);\n      break;\n\n    case 'svg':\n      info_text.push( fupl.strs.info_text_svg_file);\n      break;\n\n    case 'pdf':\n      info_text.push( fupl.strs.info_text_pdf_file);\n      break;\n  }\n\n  if( fupl.opts.max_filesize !== null ) {\n    info_text.push( fupl.strs.info_text_max_filesize );\n  }\n\n  if( fupl.opts.filetype === 'img' || fupl.opts.filetype === 'img+svg' ) {\n\n    let img_size_info = [];\n\n    if( fupl.opts.img_w && fupl.opts.img_h ) {\n      img_size_info.push( fupl.strs.info_text_img_fixed_size );\n\n    } else {\n\n      if(fupl.opts.img_min_w && fupl.opts.img_min_h && fupl.opts.img_min_w === fupl.opts.img_min_h) {\n        img_size_info.push( fupl.strs.info_text_img_equal_min_size );\n\n      } else if(fupl.opts.img_max_w && fupl.opts.img_max_h && fupl.opts.img_max_w === fupl.opts.img_max_h) {\n        img_size_info.push( fupl.strs.info_text_img_equal_max_size );\n\n      } else {\n\n        if( fupl.opts.img_w ) {\n          img_size_info.push( fupl.strs.info_text_img_fixed_width );\n\n        } else if( fupl.opts.img_min_w && fupl.opts.img_max_w ) {\n          img_size_info.push( fupl.strs.info_text_img_width_range );\n\n        } else if( fupl.opts.img_min_w ) {\n          img_size_info.push( fupl.strs.info_text_img_min_width );\n\n        } else if( fupl.opts.img_max_w  ) {\n          img_size_info.push( fupl.strs.info_text_img_max_width );\n        }\n\n        if( fupl.opts.img_h ) {\n          img_size_info.push( fupl.strs.info_text_img_fixed_height );\n\n        } else if( fupl.opts.img_min_h && fupl.opts.img_max_h ) {\n          img_size_info.push( fupl.strs.info_text_img_height_range );\n\n        } else if( fupl.opts.img_min_h ) {\n          img_size_info.push( fupl.strs.info_text_img_min_height );\n\n        } else if( fupl.opts.img_max_h ) {\n          img_size_info.push( fupl.strs.info_text_img_max_height );\n        }\n\n        if(fupl.opts.img_aspect_ratio) {\n          img_size_info.push( fupl.strs.info_text_img_aspect_ratio );\n        }\n      }\n    }\n\n    if(img_size_info.length) {\n      info_text.push(\n        (fupl.opts.filetype === 'img+svg' ? fupl.strs.info_text_imgs_svg_size_info_text : '') +\n        img_size_info.join(', ')\n      );\n    }\n  }\n\n  info_text = info_text.map( item => {\n    return item.replace(/{{img_w}}/, fupl.opts.img_w)\n      .replace(/{{img_h}}/, fupl.opts.img_h)\n      .replace(/{{img_min_w}}/, fupl.opts.img_min_w)\n      .replace(/{{img_min_h}}/, fupl.opts.img_min_h)\n      .replace(/{{img_max_w}}/, fupl.opts.img_max_w)\n      .replace(/{{img_max_h}}/, fupl.opts.img_max_h)\n      .replace(/{{img_aspect_ratio}}/, fupl.opts.img_aspect_ratio)\n      .replace(/{{max_filesize}}/, fupl.opts.max_filesize? fupl.opts.max_filesize.feedback_size : null);\n  });\n\n  let str = info_text.join(fupl.opts.info_text_join_string);\n  str = str.charAt(0).toUpperCase() + str.slice(1);\n\n  if( fupl.opts.info_text_wrap_string && str ) {\n    str = fupl.opts.info_text_wrap_string[0] + str + fupl.opts.info_text_wrap_string[1];\n  }\n\n  if(fupl.opts.filetype === 'img' || fupl.opts.filetype === 'img+svg') {\n    str += '<div>' + fupl.strs.info_text_img_optimize_info + '</div>';\n  }\n\n  if(fupl.opts.filetype === 'svg' || fupl.opts.filetype === 'img+svg') {\n    str += '<div>' + fupl.strs.info_text_svg_optimize_info + '</div>';\n  }\n\n  return str;\n}\n","import {send_files} from './_send_files.js';\nimport {fupl_alert} from './_alert.js';\n\n// https://www.smashingmagazine.com/2018/01/drag-drop-file-uploader-vanilla-js/\nexport function set_listeners(fupl) {\n\n  ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {\n    fupl.opts.element.addEventListener(eventName, (e) => {\n      e.preventDefault();\n      e.stopPropagation();\n    }, false);\n  });\n\n  ['dragover', 'dragenter'].forEach(eventName => {\n    fupl.opts.element.addEventListener(eventName, () => {\n      fupl.opts.element.classList.add( fupl.opts.element_dragover_class );\n    }, false);\n  });\n\n  ['dragleave', 'dragend'].forEach(eventName => {\n    fupl.opts.element.addEventListener(eventName, () => {\n      fupl.opts.element.classList.remove( fupl.opts.element_dragover_class );\n    }, false);\n  });\n\n  fupl.opts.element.addEventListener('drop', (e) => {\n    fupl.opts.element.classList.remove( fupl.opts.element_dragover_class );\n    if(!fupl.opts.wrapper.hasAttribute('disabled')) {\n      let files = e.dataTransfer.files;\n\n      if(files.length) { // if 0 is a reordering or another event\n        if( !fupl.opts.multiple && files.length > 1 ) {\n          fupl_alert(fupl.strs.alert_too_much_files, fupl.opts);\n        } else {\n          send_files( files, fupl );\n        }\n      }\n    }\n  }, false);\n\n  // selecting thru input element\n  fupl.opts.instance_input.addEventListener('change', () => {\n    send_files( fupl.opts.instance_input.files, fupl );\n  });\n\n}\n","// TODO update to dialog element\n\nexport function fupl_alert(mes, fupl_opts) {\n\n  const alert_dialog = `<div class=\"fupl-alert-overlay\">\n    <div class=\"fupl-alert\">\n        <div class=\"fupl-alert-inner\"></div>\n        <button type=\"button\">OK</button>\n      </div>\n  </div>`;\n\n  let alert_container = fupl_opts.element.querySelector('.fupl-alert-inner');\n\n  if(!alert_container) {\n    fupl_opts.element.insertAdjacentHTML('beforeend', alert_dialog);\n    alert_container = fupl_opts.element.querySelector('.fupl-alert-inner');\n  }\n\n  alert_container.insertAdjacentHTML('afterbegin', mes);\n\n\n}\n","/*!@preserve\n *\n * FileUploader 2\n * HTML5 / JS Async Uploader\n * Massimo Cassandro 2017-2020\n *\n */\n\nimport fupl_strings_it from './i18n/it.js';\nimport {default_options} from './_default_options.js';\n\nimport {fupl_init} from './_init.js';\n\nexport default function FileUploader( params ) {\n\n  /*\n  params obj => {\n    selector    : [string] selector of fileuploader elements\n    options     : [object] custom options\n    css         : [string] css url\n    local_strs  : [object] localized strings\n  }\n  */\n\n  const version =  '2.2';\n\n  fupl_init({\n    selector : params.selector || '.file-uploader2',            // used in fupl_init only\n    css      : params.css || null,                     // used in fupl_init only\n    opts     : Object.assign( {_vers: version}, default_options, params.options || {} ),\n    strs     : Object.assign( {}, fupl_strings_it, params.local_strs || {} )\n  });\n}\n","import {fupl_utilities} from './_utilities.js';\nimport {createUploader} from './_create_uploader.js';\n\nexport  function fupl_init(fupl) {\n\n  // browser check\n  if( !fupl_utilities.isSuitableBrowser() ) {\n    if ( 'console' in window ) {\n      console.error('This browser can\\'t run FileUploader'); // eslint-disable-line\n    }\n    return;\n  }\n\n  // CSS loading\n  if(fupl.css) {\n    document.head.insertAdjacentHTML('beforeend',\n      '<link rel=\"stylesheet\" href=\"' + fupl.css + '\" type=\"text/css\" media=\"all\">'\n    );\n  }\n\n  // `fupl.selector` elements are selected and JSFileUploader is started\n  // each element has its own options which merge with `fupl.opts`\n  document.querySelectorAll(fupl.selector).forEach( upl_element => {\n\n    /*\n      merge of global options and instance ones\n      instance options may be loaded\n      * as single data elemenys (i.e. data-filetype=\"img\"),\n        each data attribute corresponds to an item of the `default_options` array\n\n      * as `[data-file-uploader]` json value (i.e data-file-uploader='{\"filetype\":\"img\"}')\n        json has the same structure of the `default_options` array\n\n      instance options overwrites global ones (fupl.opts)\n      single data attributes overwrites json items\n    */\n\n    let all_data_params = Object.assign({}, upl_element.dataset);\n\n    // the fileUploader element contains json data and is parsed separately\n    delete all_data_params.fileUploader;\n\n    let instance_opts = Object.assign(\n      {},\n      fupl.opts,\n      JSON.parse(upl_element.dataset.fileUploader || '{}' ),\n      all_data_params\n    );\n\n    // the element itself is added to `instance_options`:\n    instance_opts.element = upl_element;\n\n    // last check and fileuploader starting\n    try {\n      //  uploader remote url can't be null\n      if( !instance_opts.uploader_url ) {\n        throw new Error( 'FileUploader: missing `uploader_url` parameter' );\n      }\n\n      // filetype parameter check\n      instance_opts.filetype = instance_opts.filetype.toLowerCase();\n\n      // aspect_ratio_accuracy\n      instance_opts.aspect_ratio_accuracy = 10 ** +instance_opts.aspect_ratio_accuracy;\n\n      // img+svg key aliases\n      if(['svg+img', 'img-svg', 'svg-img'].indexOf(instance_opts.filetype) !== -1) {\n        instance_opts.filetype = 'img+svg';\n      }\n      if( Object.keys( fupl_utilities.mimetypes ).indexOf(instance_opts.filetype) === -1 ) {\n        throw new Error( 'FileUploader: incorrect `filetype` parameter' );\n      }\n    } catch(e) {\n      console.error( e );// eslint-disable-line\n    }\n\n    // these parameters must be arrays but can retrieved as strings from data attributes\n    const json_params = [\n      'info_text_wrap_string',\n      'values',\n      'extra_fields'\n    ];\n\n\n    json_params.forEach(item => {\n      try {\n        if(typeof instance_opts[item] === 'string' ) {\n          instance_opts[item] = JSON.parse(instance_opts[item]);\n        }\n      } catch(e) {\n        console.error(`FileUploader: the “${item}” parameter is not a valid json`); // eslint-disable-line\n        console.log(instance_opts.element); // eslint-disable-line\n        console.error( e );// eslint-disable-line\n      }\n    });\n\n    // parsing of all boolean or null parameters\n    for(let i in instance_opts) {\n\n      if(typeof instance_opts[i] === 'string' &&\n        ['true', 'false', 'null'].indexOf(instance_opts[i].toLowerCase()) !== -1\n      ) {\n        instance_opts[i] = JSON.parse(instance_opts[i]);\n      }\n    }\n\n    // aspect ratio is ignored if exact constrains are presents\n    if(instance_opts.img_aspect_ratio && instance_opts.img_w && instance_opts.img_h) {\n      console.error('FileUploader: the aspect ratio parameter will be ignored, because exact constraints have been set for width and height'); // eslint-disable-line\n      instance_opts.img_aspect_ratio = null;\n    }\n\n    // aspect ratio parsing\n    instance_opts.parsed_img_aspect_ratio = null;\n    if(instance_opts.img_aspect_ratio) {\n\n      try {\n        if(isNaN(instance_opts.img_aspect_ratio)) {\n          let w,h;\n          if(instance_opts.img_aspect_ratio.indexOf('/') !== -1) {\n            [w,h] = instance_opts.img_aspect_ratio.split('/');\n          } else if (instance_opts.img_aspect_ratio.indexOf(':') !== -1) {\n            [w,h] = instance_opts.img_aspect_ratio.split(':');\n          }\n\n          if( w && h ) {\n            instance_opts.parsed_img_aspect_ratio = +w/+h;\n          } else {\n            instance_opts.parsed_img_aspect_ratio = Number(instance_opts.img_aspect_ratio);\n          }\n\n        } else {\n          instance_opts.parsed_img_aspect_ratio = +instance_opts.img_aspect_ratio;\n        }\n\n        if(instance_opts.parsed_img_aspect_ratio) {\n          instance_opts.parsed_img_aspect_ratio = Math.round((instance_opts.parsed_img_aspect_ratio + Number.EPSILON) * instance_opts.aspect_ratio_accuracy) / instance_opts.aspect_ratio_accuracy;\n        }\n\n        if(isNaN(instance_opts.parsed_img_aspect_ratio) || !instance_opts.parsed_img_aspect_ratio) {\n          throw new Error();\n        }\n      } catch(e) {\n        console.error(`FileUploader: incorrect aspect ratio parameter → ${instance_opts.img_aspect_ratio}`); // eslint-disable-line\n        instance_opts.img_aspect_ratio = null;\n        instance_opts.parsed_img_aspect_ratio = null;\n      }\n    }\n\n    // calling the createUploader function. Global options are completely overwritten\n    // by instance_opts\n    new createUploader({\n      strs: fupl.strs,\n      opts: instance_opts\n    });\n\n  }); // end document.querySelectorAll(fupl.selector).forEach\n\n}\n\n"],"names":["fupl_strings_it","alert_too_much_files","alert_xhr_error","alert_file_format_error","alert_file_size_error","alert_img_err_start_string","alert_img_exact_width_err","alert_img_min_width_err","alert_img_max_width_err","alert_img_exact_height_err","alert_img_min_height_err","alert_img_max_height_err","alert_img_ratio_err","no_img_text","no_doc_text","remove_btn_text","info_text_std_imgs","info_text_imgs_svg","info_text_imgs_svg_size_info_text","info_text_img_optimize_info","info_text_svg_optimize_info","info_text_img_fixed_size","info_text_img_equal_min_size","info_text_img_equal_max_size","info_text_img_fixed_width","info_text_img_fixed_height","info_text_img_width_range","info_text_img_min_width","info_text_img_max_width","info_text_img_height_range","info_text_img_min_height","info_text_img_max_height","info_text_pdf_file","info_text_svg_file","info_text_max_filesize","info_text_img_aspect_ratio","img_single_select_text","img_single_drag_text","img_multiple_select_text","img_multiple_drag_text","doc_single_select_text","doc_single_drag_text","doc_multiple_select_text","doc_multiple_drag_text","sortable_icon_title_text","default_options","alert_api","mes","opts","type","window","alert","replace","uploader_url","locales","debug","ajax_method","disabled","filetype","accept","multiple","required","disable_submit","template_main","template_empty_img","template_empty_doc","template_remove_btn","template_loading_element","template_alternative_loading_element","template_img_item_single","template_img_item_multiple","template_doc_item_single","template_doc_item_multiple","wrapper_extra_class","element_dragover_class","uploader_legend","uploader_legend_text","uploader_legend_class","input_label_class","show_info_text","show_optimize_info","info_text_wrap_string","info_text_join_string","custom_info_text","help_text","img_w","img_h","img_min_w","img_min_h","img_max_w","img_max_h","img_aspect_ratio","aspect_ratio_accuracy","max_filesize","varname","registered_extra_field_varname","init_callback","upload_start_callback","upload_complete_callback","alternative_loading_func","values","delete_varname","fancybox","fancybox_anchor_markup","fancybox_callback_func","sortable","sortable_varname","sortable_icon","extra_fields","fupl_utilities","mimetypes","auto","img","pdf","svg","concat","isSuitableBrowser","navigator","userAgent","indexOf","appVersion","div","document","createElement","set_has_values","fupl","items","instance_result_wrapper","querySelectorAll","length","wrapper","dataset","hasValues","innerHTML","strs","_type","parse_bytes_value","bytes","mega","toLocaleString","maximumFractionDigits","Number","toFixed","Math","round","parse_max_filesize","filesize_value","maxbytes","unit","feedback_size","isNaN","substr","toUpperCase","exec_callback","callback_function","params","cbk_func","split","forEach","item","error","console","dragged_element","uploader_is_disabled","resetAll","classList","remove","parentNode","closest","create_item","item_data","preregistered","item_markup","_mode","fupl_item_wrapper","fupl_remove","querySelector","fupl_file_name","name","title","fupl_file_size","size_string","wi","he","size","src","fupl_url","url","href","fupl_item","loading","add","insertAdjacentHTML","fupl_item_dom","id","fupl_remove_trigger","addEventListener","prereg_id","rel_id","img_element","fancybox_wrapper","firstChild","insertBefore","appendChild","setAttribute","extra_fields_wrapper","markup","value_key","use_rel_id","ev","e","preventDefault","stopPropagation","order_value","fupl_options","this","element","dataTransfer","effectAllowed","setData","getData","dropEffect","previousElementSibling","nextElementSibling","insertAdjacentElement","idx","value","add_sortable_events","send_files","filelist","mode","_form","btn","uploadFile","current_item","img_preview","this_item","file","width","height","img_type","fupl_progress","fupl_loading_wrapper","xhr_error_message","uploader_options","Promise","resolve","reject","ajax","XMLHttpRequest","open","onload","status","response","JSON","parse","responseText","tmp_file","server_error","groupCollapsed","_vers","log","groupEnd","statusText","onerror","upload","perc_loaded","loaded","total","lengthComputable","Infinity","fileData","FormData","append","send","then","hidden_fields","field_values","file_name","filename","converted","std_char","conversionTable","à","è","é","ì","ò","ù","À","È","É","Ì","Ò","Ù","'","|","!","\"","$","%","&","/","(",")","=","?","^","*","[","]","ç","@","#","<",">","ü","Ü","ñ","Ñ","~",":","\\","i","charCodeAt","charAt","RegExp","normalize_file_name","_key","undefined","build_hidden_fields","click","filelist_item","Date","now","ext","pop","toLowerCase","item_parsed_size","reader","FileReader","image","Image","result","err_mes","push","parsed_img_aspect_ratio","EPSILON","join","readAsDataURL","errormessage","createUploader","_input","original_label","accept_attr","accept_params","map","trim","getAttribute","Set","Error","Boolean","hasAttribute","_class","instance_input","instance_label","instance_dd_text","instance_info_text","info_text","img_size_info","str","slice","create_info_text","Array","isArray","eventName","files","fupl_opts","alert_container","fupl_alert","set_listeners","sorted_options","Object","keys","sort","reduce","key","fileUploderOpts","FileUploader","selector","css","assign","options","local_strs","head","upl_element","all_data_params","fileUploader","instance_opts","w","h"],"mappings":"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"}