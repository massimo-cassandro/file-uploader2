{"version":3,"sources":["../js/file_uploader.js","../js/_init.js","../js/_create_uploader.js","../js/_create_item.js","../js/_set_listeners.js","../js/_send_files.js","../js/_build_hidden_fields.js","../js/_sortable.js","../js/_create_info_text.js","../js/_set_options.js","../js/_funcs_and_params.js"],"names":["FileUploader","upl","isSuitableBrowser","navigator","userAgent","indexOf","appVersion","div","document","createElement","window","init","init_options","global_options","setOptions","silent_degradation","alert","alert_messages","unsuitable_browser","unsuitable_browser_callback","exec_callback","css","head","insertAdjacentHTML","querySelectorAll","fupl_selector","forEach","upl_element","element_all_dataset","dataset","fupl_selector_camel_case","replace","m","toUpperCase","fupl_dataset","fupl_options","JSON","parse","element","uploader_url","Error","filetype","toLowerCase","aspect_ratio_accuracy","Math","pow","Object","keys","mimetypes","e","console","error","json_params","i","item","concat","log","img_aspect_ratio","img_w","img_h","parsed_img_aspect_ratio","isNaN","w","h","_fupl_options$img_asp","_fupl_options$img_asp2","_slicedToArray","split","_fupl_options$img_asp3","_fupl_options$img_asp4","Number","round","EPSILON","createUploader","_input","querySelector","original_label","accept_attr","accept_params","accept","map","trim","getAttribute","_toConsumableArray","Set","max_filesize","parse_max_filesize","locales","_fupl_options$wrapper","_fupl_options$istance","multiple","Boolean","hasAttribute","required","disabled","_type","_mode","uploader_legend_text","innerHTML","classList","add","wrapper","parentNode","insertBefore","appendChild","wrapper_extra_class","apply","uploader_legend","_class","uploader_legend_class","push","length","join","templates","main","istance_input","istance_label","istance_dd_text","istance_info_text","istance_result_wrapper","setAttribute","data_attributes","input_text","input_label_class","show_info_text","custom_info_text","create_info_text","help_text","sortable","sortable_varname","activateSortable","values","_typeof","Array","isArray","createItem","set_has_values","setListeners","init_callback","fancybox","fancybox_callback_func","debug","groupCollapsed","groupEnd","item_data","preregistered","arguments","undefined","item_markup","fupl_item_wrapper","fupl_remove","remove_btn","fupl_file_name","name","title","fupl_file_size","size_string","wi","he","size","parse_filesize","src","fupl_url","url","href","fupl_item","loading","loading_element","fupl_item_dom","item_id","id","fupl_remove_trigger","addEventListener","remove","prereg_id","rel_id","delete_varname","fancybox_anchor_markup","img_element","fancybox_wrapper","firstChild","extra_fields_wrapper","extra_fields","markup","value_key","registered_extra_field_varname","varname","use_rel_id","ev","preventDefault","stopPropagation","order_value","sortable_icon","addSortableEvents","eventName","element_dragover_class","files","dataTransfer","alert_api","too_much_files","sendFiles","filelist","disable_submit","modo","_form","closest","submit_btns","btn","uploadFile","current_item","img_preview","this_item","file","width","height","img_type","fupl_progress","fupl_loading_wrapper","xhr_error_message","xhr_error","remove_item_on_error","click","upload_start_callback","uploader_options","Promise","resolve","reject","ajax","XMLHttpRequest","open","onload","status","response","responseText","tmp_file","upload_complete_callback","server_error","statusText","onerror","upload","alternative_loading_func","perc_loaded","loaded","total","lengthComputable","Infinity","value","alternative_loading_element","fileData","FormData","append","send","then","buildHiddenFields","filelist_item","idx","Date","now","type","ext","pop","file_format_error","maxbytes","item_parsed_size","file_size_error","feedback_size","reader","FileReader","image","Image","result","err_mes","img_ratio","img_exact_width_err","img_min_w","img_min_width_err","img_max_w","img_max_width_err","img_exact_height_err","img_min_h","img_min_height_err","img_max_h","img_max_height_err","img_ratio_err","img_err_start_string","readAsDataURL","errormessage","normalize_file_name","filename","converted","conversionTable","à","è","é","ì","ò","ù","À","È","É","Ì","Ò","Ù","'","|","!","\"","$","%","&","/","(",")","=","?","^","*","[","]","ç","@","#","<",">","ü","Ü","ñ","Ñ","~",":","\\","charCodeAt","charAt","hidden_fields","field_values","file_name","_key","classes","dragged_element","uploader_is_disabled","resetAll","this","effectAllowed","setData","getData","dropEffect","previousElementSibling","nextElementSibling","insertAdjacentElement","info_text","std_imgs","imgs_svg","svg","pdf_file","img_size_info","img_fixed_size","img_equal_min_size","img_equal_max_size","img_fixed_width","img_width_range","img_min_width","img_max_width","img_fixed_height","img_height_range","img_min_height","img_max_height","imgs_svg_size_info_text","str","info_text_join_string","slice","info_text_wrap_string","svg_optimize_info","default_options","mes","opts","no_file","img","doc","single","_len","custom_options","assign","_ret","_loop","v","auto","pdf","hasValues","items","bytes","mega","toLocaleString","maximumFractionDigits","toFixed","filesize_value","unit","substr","callback_function","params","cbk_func"],"mappings":"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","sourcesContent":["/*!@preserve\n *\n * FileUploader 1\n * HTML5 / JS Async Uploader\n * Massimo Cassandro 2017-2019\n *\n */\n\n//* eslint no-console: 0, no-unused-vars: 0, no-empty:  0 */\n/* exported FileUploader */\n\n/*\n@codekit-append '_funcs_and_params.js'\n@codekit-append '_set_options.js'\n@codekit-append '_create_info_text.js'\n@codekit-append '_sortable.js'\n@codekit-append '_build_hidden_fields.js'\n@codekit-append '_send_files.js'\n@codekit-append '_set_listeners.js'\n@codekit-append '_create_item.js'\n@codekit-append '_create_uploader.js'\n\n@codekit-append '_init.js'\n\n*/\n'use strict';\nvar FileUploader = (function () {\n\n  let upl = {};\n\n  return upl;\n})();\n","FileUploader = ((upl) => {\n\n  // VARIABILI E METODI PRIVATI\n  /*\n    isSuitableBrowser\n    Verifica che il browser sia in grado di gestire le funzionalità richieste.\n    Restituisce `true` o `false`\n  */\n  const isSuitableBrowser = () => {\n    // Eliminazione IE\n    if( navigator.userAgent.indexOf('MSIE') !== -1 ||\n    navigator.appVersion.indexOf('Trident/') > -1 ||\n    navigator.userAgent.indexOf('Trident/') > -1 ){\n      return false;\n    }\n\n    var div = document.createElement( 'div' );\n    return ( ( 'draggable' in div ) || ( 'ondragstart' in div && 'ondrop' in div ) ) //TODO rimuovere ondragstart/ondrop (IE)?\n      && 'FormData' in window\n      && 'FileReader' in window\n      && 'fetch' in window;\n  };\n\n\n  /*\n    init\n    Seleziona gli elementi con l'attributo `global_options.fupl_selector` e avvia FileUploader\n    `global_options` è l'oggetto istanziato al momento di avviare FileUploader,\n    ha la stessa struttura di `default_options` (definito in _set_options.js)\n    e può sovrascrivere ogni suo elemento\n  */\n  upl.init = (init_options) => {\n\n    const global_options = upl.setOptions(init_options);\n\n    // verifica che il browser sia compatibile\n    if( !isSuitableBrowser() ) {\n      if(!global_options.silent_degradation) {\n        alert(global_options.alert_messages.unsuitable_browser);\n      }\n      if(global_options.unsuitable_browser_callback) {\n        upl.exec_callback(global_options.unsuitable_browser_callback);\n      }\n      return;\n    }\n\n    // caricamento CSS\n    if(global_options.css) {\n      document.head.insertAdjacentHTML('beforeend',\n        '<link rel=\"stylesheet\" href=\"' + global_options.css + '\" type=\"text/css\" media=\"all\">'\n      );\n    }\n\n    // istanze uploader\n    //---------------------------------------------------\n    document.querySelectorAll('[data-' + global_options.fupl_selector + ']').forEach( upl_element => {\n      /*\n        merge dei parametri inseriti tramite attributi `data`, in cui:\n\n        * `upl_element.dataset`:\n            tutti gli attributi inseriti singolarmente (es. data-filetype=\"img\")\n\n        * `upl_element.dataset[global_options.fupl_selector]`:\n            attributi inseriti tramite json assegnato a `data- + 'global_options.fupl_selector'`\n            (es data-file-uploader='{\"filetype\":\"img\"}')\n\n        In caso di conflitto prevalgono gli ultimi\n      */\n\n      let element_all_dataset = upl_element.dataset,\n        fupl_selector_camel_case = global_options\n          .fupl_selector.replace(/-([a-z])/g, m => m[1].toUpperCase() ),\n        fupl_dataset = upl_element.dataset[fupl_selector_camel_case],\n        fupl_options = {};\n\n      if(element_all_dataset === '') {\n        element_all_dataset = {};\n      }\n\n      if(fupl_dataset === '') {\n        fupl_dataset = {};\n      } else {\n        fupl_dataset = JSON.parse(fupl_dataset);\n      }\n\n      fupl_options = upl.setOptions(\n        global_options,\n        fupl_dataset,\n        element_all_dataset\n      );\n\n      // cancella la chiave `global_options.fupl_selector`\n      // (al solo scopo di semplificare)\n      delete fupl_options[fupl_selector_camel_case];\n\n      // aggiunta dell'elemento stesso ad  `fupl_options`:\n      fupl_options.element = upl_element;\n\n      // controllo ed elaborazione parametri e avvio uploader\n      try {\n        //  controllo url\n        if( !fupl_options.uploader_url ) {\n          throw new Error( 'Parametro `uploader_url` non impostato' );\n        }\n\n        // filetype parameter check\n        fupl_options.filetype = fupl_options.filetype.toLowerCase();\n\n        // aspect_ratio_accuracy\n        fupl_options.aspect_ratio_accuracy = 10 ** +fupl_options.aspect_ratio_accuracy;\n\n        // img+svg aliases\n        if(['svg+img', 'img-svg', 'svg-img'].indexOf(fupl_options.filetype) !== -1) {\n          fupl_options.filetype = 'img+svg';\n        }\n        if( Object.keys(upl.mimetypes).indexOf(fupl_options.filetype) === -1 ) {\n          throw new Error( 'Parametro `filetype` non corretto' );\n        }\n      } catch(e) {\n        console.error( e );// eslint-disable-line\n      }\n\n      // parametri che devono essere array e che potrebbero essere presenti\n      // come attributi data (stringa)\n      const json_params = [\n        'input_text',\n        'templates',\n        'info_text_wrap_string',\n        'values',\n        'extra_fields'\n      ];\n\n\n      json_params.forEach(item => {\n        try {\n          if(typeof fupl_options[item] === 'string' ) {\n            fupl_options[item] = JSON.parse(fupl_options[item]);\n          }\n        } catch(e) {\n          console.error(`L'elemento “${item}” non è un json valido`); // eslint-disable-line\n          console.log(fupl_options.element); // eslint-disable-line\n          console.error( e );// eslint-disable-line\n        }\n      });\n\n      // interpretazione automatica di tutti i parametri booleani o null\n      for(let i in fupl_options) {\n\n        if(typeof fupl_options[i] === 'string' &&\n          ['true', 'false', 'null'].indexOf(fupl_options[i].toLowerCase()) !== -1) {\n          fupl_options[i] = JSON.parse(fupl_options[i]);\n        }\n      }\n\n      // aspect ratio is ignored if exact constrains are presents\n      if(fupl_options.img_aspect_ratio && fupl_options.img_w && fupl_options.img_h) {\n        console.error('FileUploader: the aspect ratio parameter will be ignored, because exact constraints have been set for width and height'); // eslint-disable-line\n        fupl_options.img_aspect_ratio = null;\n      }\n\n      // aspect ratio\n      fupl_options.parsed_img_aspect_ratio = null;\n      if(fupl_options.img_aspect_ratio) {\n\n        try {\n          if(isNaN(fupl_options.img_aspect_ratio)) {\n            let w,h;\n            if(fupl_options.img_aspect_ratio.indexOf('/') !== -1) {\n              [w,h] = fupl_options.img_aspect_ratio.split('/');\n            } else if (fupl_options.img_aspect_ratio.indexOf(':') !== -1) {\n              [w,h] = fupl_options.img_aspect_ratio.split(':');\n            }\n\n            if( w && h ) {\n              fupl_options.parsed_img_aspect_ratio = +w/+h;\n            } else {\n              fupl_options.parsed_img_aspect_ratio = Number(fupl_options.img_aspect_ratio);\n            }\n\n          } else {\n            fupl_options.parsed_img_aspect_ratio = +fupl_options.img_aspect_ratio;\n          }\n\n          if(fupl_options.parsed_img_aspect_ratio) {\n            fupl_options.parsed_img_aspect_ratio = Math.round((fupl_options.parsed_img_aspect_ratio + Number.EPSILON) * fupl_options.aspect_ratio_accuracy) / fupl_options.aspect_ratio_accuracy;\n          }\n\n          if(isNaN(fupl_options.parsed_img_aspect_ratio) || !fupl_options.parsed_img_aspect_ratio) {\n            throw new Error();\n          }\n        } catch(e) {\n          console.error(`FileUploader: incorrect aspect ratio parameter → ${fupl_options.img_aspect_ratio}`); // eslint-disable-line\n          fupl_options.img_aspect_ratio = null;\n          fupl_options.parsed_img_aspect_ratio = null;\n        }\n      }\n\n\n      new upl.createUploader(fupl_options);\n    }); // end document.querySelectorAll(fupl_selector).forEach\n  }; // end upl.init\n\n  return upl;\n\n})(FileUploader || {});\n\n","FileUploader = ((upl) => {\n\n  upl.createUploader = (fupl_options) => {\n\n    // eventuale campo input e relativo tag label\n    let _input = fupl_options.element.querySelector('input[type=\"file\"]'),\n      original_label = fupl_options.element.querySelector('label');\n\n\n    // implementazione eventuali parametro/attributo `accept`\n    if( fupl_options.filetype === 'auto' ) {\n\n      let accept_attr = [],\n        accept_params = [];\n\n      if( fupl_options.accept !== null ) {\n        accept_params = fupl_options.accept\n          .split(',').map( item => item.trim() );\n      }\n\n      if(_input && _input.getAttribute('accept') ) {\n        accept_attr = _input.getAttribute('accept')\n          .split(',').map( item => item.trim() );\n      }\n\n      // https://www.peterbe.com/plog/merge-two-arrays-without-duplicates-in-javascript\n      fupl_options.accept = [...new Set([...accept_params, ...accept_attr])];\n\n    } else {\n      fupl_options.accept = upl.mimetypes[fupl_options.filetype];\n    }\n\n    // elaborazione max_filesize\n    let max_filesize = upl.parse_max_filesize(fupl_options.max_filesize, fupl_options.locales);\n    if( max_filesize === false ) {\n      throw new Error( '\"' + fupl_options.max_filesize + '\" non è un valore corretto per `max_filesize`');\n    } else {\n      fupl_options.max_filesize = max_filesize;\n    }\n\n    // parametro o attributo multiple\n    fupl_options.multiple = Boolean(fupl_options.multiple ||\n      (_input && _input.hasAttribute('multiple') ));\n\n    // parametro o attributo required\n    fupl_options.required = Boolean(fupl_options.required ||\n      (_input && _input.hasAttribute('required') ));\n\n    // parametro o attributo disabled\n    fupl_options.disabled = Boolean(fupl_options.disabled ||\n      (_input && _input.hasAttribute('disabled') ));\n\n\n    // tipologia generale dell'uploader (img o doc) e modalità\n    // selezione file\n    fupl_options._type = ['img', 'svg', 'img+svg'].indexOf(fupl_options.filetype) !== -1? 'img' : 'doc';\n    fupl_options._mode = fupl_options.multiple? 'multiple' : 'single';\n\n    // testo label (da tag o parametro uploader_legend_text)\n    if( !fupl_options.uploader_legend_text && original_label) {\n      fupl_options.uploader_legend_text = original_label.innerHTML;\n    }\n    // caso in cui sia presente nessun valore\n    if ( !fupl_options.uploader_legend_text ) {\n      fupl_options.uploader_legend_text = '__legend non presente__';\n    }\n\n    // aggiunta della classe principale\n    fupl_options.element.classList.add('fupl');\n\n    // aggiunta wrapper\n    fupl_options.wrapper = document.createElement('fieldset');\n    fupl_options.element.parentNode.insertBefore(fupl_options.wrapper, fupl_options.element);\n    fupl_options.wrapper.appendChild(fupl_options.element);\n    fupl_options.wrapper.classList.add('fupl-wrapper');\n    fupl_options.wrapper.classList.add('fupl-type-' + fupl_options._type );\n    if(fupl_options.multiple) {\n      fupl_options.wrapper.classList.add('fupl-multiple');\n    }\n    // aggiunta eventuali classi personalizzate\n    if( fupl_options.wrapper_extra_class ) {\n      fupl_options.wrapper.classList.add( ...fupl_options.wrapper_extra_class.split(' ') );\n    }\n\n    // aggiunta legend uploader\n    if( fupl_options.uploader_legend ) {\n      let _class = ['fupl-legend'];\n      if( fupl_options.uploader_legend_class ) {\n        _class.push(fupl_options.uploader_legend_class);\n      }\n      if( fupl_options.required ) {\n        _class.push('required');\n      }\n\n      fupl_options.element.insertAdjacentHTML('beforebegin',\n        '<legend' + (_class.length? ' class=\"' + _class.join(' ') + '\"' : '') + '>' +\n          fupl_options.uploader_legend_text +\n        '</legend>'\n      );\n      fupl_options.wrapper.classList.add( 'fupl-has-legend' );\n    }\n\n    // aggiunta template uploader\n    fupl_options.element.innerHTML = fupl_options.templates.main;\n\n    fupl_options.istance_input = fupl_options.element.querySelector('.fupl-panel input[type=\"file\"]');\n    fupl_options.istance_label = fupl_options.element.querySelector('.fupl-panel label');\n    fupl_options.istance_dd_text = fupl_options.element.querySelector('.fupl-panel .fupl-dd-text');\n    fupl_options.istance_info_text = fupl_options.element.querySelector('.fupl-panel .fupl-info-text');\n    fupl_options.istance_result_wrapper = fupl_options.element.querySelector('.fupl-result');\n\n\n    // inserimento testi e attributi\n    // if( fupl_options.required ) {\n    //   fupl_options.istance_input.setAttribute('required', '');\n    // }\n    if( fupl_options.multiple ) {\n      fupl_options.istance_input.setAttribute('multiple', '');\n    }\n    if( fupl_options.accept !== null ) {\n      fupl_options.istance_input.setAttribute('accept', fupl_options.accept.join(','));\n    }\n\n    // aggiunta attributo data al wrapper per segnalare il required\n    if( fupl_options.required ) {\n      fupl_options.wrapper.dataset[upl.data_attributes.required] = 'true';\n    }\n\n    // aggiunta attributo disabled al wrapper\n    if( fupl_options.disabled ) {\n      fupl_options.wrapper.setAttribute('disabled', true);\n      fupl_options.wrapper.setAttribute('aria-disabled', true);\n    }\n\n\n    fupl_options.istance_label.insertAdjacentHTML('beforeend',\n      fupl_options.input_text[fupl_options._type][fupl_options._mode][0]\n    );\n    if(fupl_options.input_label_class) {\n      fupl_options.istance_label.classList.add(...fupl_options.input_label_class.split(' '));\n    }\n    fupl_options.istance_dd_text.innerHTML = fupl_options.input_text[fupl_options._type][fupl_options._mode][1];\n\n    // info text\n    if( fupl_options.show_info_text ) {\n      if(fupl_options.custom_info_text) {\n        fupl_options.istance_info_text.innerHTML = fupl_options.custom_info_text;\n      } else {\n        fupl_options.istance_info_text.innerHTML = upl.create_info_text(fupl_options);\n      }\n\n      if(fupl_options.help_text) {\n        fupl_options.istance_info_text.insertAdjacentHTML('beforeend',\n          `<div class=\"fupl-help-text\">${fupl_options.help_text}</div>`\n        );\n      }\n    }\n\n\n    // Sortable\n    if( fupl_options.sortable) {\n      if( fupl_options.multiple && fupl_options.sortable_varname ) {\n\n        upl.activateSortable(fupl_options);\n\n      } else {\n        console.error('\"sortable\" option incorrectly set'); // eslint-disable-line\n        fupl_options.sortable = false;\n      }\n\n    }\n\n    // aggiunta valori\n    // se values esiste ma è un oggetto, viene inserito in un array (non è garanzia di funzionamento)\n    // se è un altro tipo di variabile viene generato un errore\n    if(fupl_options.values) {\n      if(typeof fupl_options.values === 'object') {\n        if(!Array.isArray(fupl_options.values)) {\n          fupl_options.values = [fupl_options.values];\n        }\n      } else {\n        console.error(\"Il parametro `values` non è corretto\"); // eslint-disable-line\n      }\n    }\n\n    if( fupl_options.values && fupl_options.values.length ) {\n\n      fupl_options.values.forEach( item => {\n        upl.createItem(item, fupl_options, true); // true means that the element comes from the server\n      });\n\n    }\n    upl.set_has_values(fupl_options);\n\n    // gestione aggiunta nuovi elementi\n    upl.setListeners(fupl_options);\n\n\n    // calling init_callback, if present\n    if( fupl_options.init_callback !== null ) {\n      upl.exec_callback(fupl_options.init_callback, fupl_options);\n    }\n\n    // calling fancybox_callback_func, if present\n    if( fupl_options.fancybox && fupl_options.fancybox_callback_func !== null ) {\n      upl.exec_callback(fupl_options.fancybox_callback_func, fupl_options);\n    }\n\n    //debug\n    if( fupl_options.debug ) {\n      /* eslint-disable */\n      /* console.groupCollapsed('FileUploader options');\n        // creazione di un oggetto bidimensinale per\n        // semplificare la rappresentazione in tabella\n        let c_options = {},\n        c_keys = Object.keys(fupl_options);\n        c_keys.sort();\n        c_keys.forEach(item => {\n          let _toStringify = typeof fupl_options[item] === 'object' &&\n          fupl_options[item] !== null &&\n            item !== 'element';\n          c_options[item] = _toStringify ? JSON.stringify(fupl_options[item], null, ' ') : fupl_options[item];\n        });\n        console.table(c_options);\n        console.groupCollapsed('fupl_options');\n          console.log(fupl_options);\n        console.groupEnd();\n      console.groupEnd();\n      */\n\n      console.groupCollapsed('FileUploader options');\n        console.log(fupl_options);\n      console.groupEnd();\n\n      /* eslint-enable */\n    } // end if debug\n\n\n  }; // end upl.createUploader\n\n  return upl;\n\n})(FileUploader || {});\n","FileUploader = ((upl) => {\n\n\n  /*\n  Aggiunge un elemento a fupl_options.istance_result_wrapper\n  e imposta i necessari listeners\n\n  item_data è l'oggetto con i dati dell'elemento:\n\n  {\n    id    → identificativo univoco del file (può essere anche il percorso sul server)\n    name  → nome del file\n    url   → url per eventuale tag <a> presente nell'elemento (se immagine può essere assente o null)\n    src   → attributo `src` obbligatorio se immagine, oppure assente o null\n    wi    → larghezza in px se immagine oppure assente o null\n    he    → altezza in px se immagine oppure assente o null\n    size  → dimensione in bytes\n    loading → true se se si tratta di un elemento in fase di upload\n    [...] → eventuali campi aggiuntivi specifici dell'istanza\n  }\n\n  */\n\n  upl.createItem = (item_data, fupl_options, preregistered = false) => {\n    try {\n\n      let item_markup = fupl_options.templates[fupl_options._type][fupl_options._mode];\n      if( item_markup === null && fupl_options._mode === 'multiple' ) {\n        item_markup = fupl_options.templates[fupl_options._type]['single'];\n      }\n\n      let fupl_item_wrapper = document.createElement('div'); // wrapper da rimuovere al momento dell'inserimento\n      fupl_item_wrapper.innerHTML = item_markup;\n\n      // aggiunta pulsante rimozione\n      let fupl_remove = fupl_item_wrapper.querySelector('.fupl-remove');\n      if(fupl_remove) {\n        fupl_remove.innerHTML = fupl_options.templates.remove_btn;\n      }\n\n      /*\n        aggiunta dati specifici dell'elemento:\n\n        elementi interni a fupl-item:\n          .fupl-file-name\n          .fupl-file-size\n          .fupl-img → img\n          .fupl-img → a.href\n          .fupl-doc → a.href\n\n      */\n\n      // nome file\n      let fupl_file_name = fupl_item_wrapper.querySelector('.fupl-file-name');\n      if(fupl_file_name && item_data.name ) {\n        fupl_file_name.innerHTML = item_data.name;\n        fupl_file_name.title = item_data.name;\n      }\n\n      // info dimensioni\n      let fupl_file_size = fupl_item_wrapper.querySelector('.fupl-file-size');\n      if(fupl_file_size ) {\n        let size_string = '';\n        if(fupl_options._type === 'img' && item_data.wi && item_data.he) {\n          size_string = item_data.wi + '&times;' + item_data.he + '<span class=\"fupl-unit\">px</span>';\n          if(item_data.size) {\n            size_string += ' &ndash; ';\n          }\n        }\n        if(item_data.size) {\n          size_string += upl.parse_filesize(item_data.size, fupl_options.locales);\n        }\n\n        fupl_file_size.innerHTML = size_string;\n      }\n\n      // immagine\n      if( fupl_options._type === 'img' ) {\n        fupl_item_wrapper.querySelector('.fupl-img').src = item_data.src;\n      }\n\n      // url\n      let fupl_url = fupl_item_wrapper.querySelector('.fupl-url');\n      if( fupl_url && item_data.url) {\n        fupl_url.href = item_data.url;\n      }\n\n      let fupl_item = fupl_item_wrapper.querySelector('.fupl-item');\n\n\n      if(item_data.loading) {\n        fupl_item.classList.add('fupl-is-uploading');\n        fupl_item.insertAdjacentHTML('beforeend',\n          fupl_options.templates.loading_element\n        );\n      }\n\n      if(fupl_options._mode === 'single') {\n        fupl_options.istance_result_wrapper.innerHTML = fupl_item_wrapper.innerHTML;\n      } else {\n\n        // se non esistono elementi caricati predentemente, si svuota il div per\n        // eliminare la scritta no file\n        if( !fupl_options.istance_result_wrapper.querySelector('.fupl-item')) {\n          fupl_options.istance_result_wrapper.innerHTML = '';\n        }\n\n        fupl_options.istance_result_wrapper.insertAdjacentHTML('beforeend',\n          fupl_item_wrapper.innerHTML\n        );\n      }\n\n\n      let fupl_item_dom = fupl_options.istance_result_wrapper.querySelector('.fupl-item:last-child');\n      fupl_item_dom.dataset[upl.data_attributes.item_id] = item_data.id;\n\n      // aggiunta evento trigger eliminazione elemento\n      let fupl_remove_trigger = fupl_item_dom.querySelector('.fupl-remove-trigger');\n      if(fupl_remove_trigger) {\n        fupl_remove_trigger.addEventListener('click', () => {\n          fupl_item_dom.remove();\n\n          let prereg_id = item_data.rel_id? item_data.rel_id : item_data.id;\n\n          if(prereg_id && preregistered) {\n            fupl_options.wrapper.insertAdjacentHTML('beforeend',\n              `<input type=\"hidden\" name=\"${fupl_options.delete_varname}\" value=\"${prereg_id}\">`\n            );\n          }\n\n          // controllo se istance_result_wrapper è vuoto\n          // e impostazione di attributo e contenuti\n          upl.set_has_values(fupl_options);\n\n        });\n      }\n\n      //fancybox\n      if( fupl_options.fancybox && fupl_options._type === 'img' && item_data.url && fupl_options.fancybox_anchor_markup) {\n        // controllo esistenza tag `a.fupl-url` e aggiunta se necessario\n        if( !fupl_item_dom.querySelector('a.fupl-url') ) {\n\n          let img_element = fupl_item_dom.querySelector('.fupl-img'),\n            fancybox_wrapper = document.createElement('div');\n          fancybox_wrapper.innerHTML = fupl_options.fancybox_anchor_markup;\n\n          fancybox_wrapper = fancybox_wrapper.firstChild;\n          img_element.parentNode.insertBefore(fancybox_wrapper, img_element);\n          fancybox_wrapper.appendChild(img_element);\n        }\n\n        fupl_item_dom.querySelector('a.fupl-url').setAttribute('href', item_data.url);\n\n      }\n\n      // extra fields\n      let extra_fields_wrapper = fupl_item_dom.querySelector('.fupl-extra-fields');\n      if(fupl_options.extra_fields !== null && extra_fields_wrapper) {\n\n        fupl_options.extra_fields.forEach( item => {\n          extra_fields_wrapper.insertAdjacentHTML('beforeend',\n            item.markup.replace(/{{idx}}/g, item_data.id)\n              .replace(/{{val}}/g, preregistered && item_data[item.value_key]? item_data[item.value_key] : '')\n              .replace(/{{checked}}/g, preregistered && +item_data[item.value_key]? 'checked' : '')\n              .replace(/{{name}}/g,\n                (preregistered && fupl_options.registered_extra_field_varname?\n                  fupl_options.registered_extra_field_varname : fupl_options.varname) +\n                '[' +\n                ((item.use_rel_id && item_data.rel_id)? item_data.rel_id : item_data.id) +\n                '][' + item.value_key + ']'\n              )\n          );\n        });\n\n        // stop bubbling when sortable\n        if( fupl_options.sortable ) {\n          extra_fields_wrapper.querySelectorAll('select, input, textarea').forEach(item => {\n            item.setAttribute('draggable', 'false');\n            ['dragstart', 'drag', 'mousedown'].forEach( ev => {\n              item.addEventListener(ev, e => {\n                if(ev !== 'mousedown') {e.preventDefault();}\n                e.stopPropagation();\n              });\n            });\n          });\n        }\n      }\n\n      // sortable\n      if( fupl_options.sortable ) {\n        fupl_item_dom.setAttribute('draggable', true);\n\n        // il valore ordine comincia da zero\n        let order_value = fupl_options.istance_result_wrapper.querySelectorAll('.fupl-item').length -1;\n\n        fupl_item_dom.insertAdjacentHTML('beforeend',\n          '<input type=\"hidden\" class=\"fupl-sortable-order\" name=\"' +\n              (preregistered && fupl_options.registered_extra_field_varname?\n                fupl_options.registered_extra_field_varname :\n                fupl_options.varname) +\n              `[${item_data.id}][${fupl_options.sortable_varname}]\" value=\"${order_value}\">`\n        );\n        if(fupl_options.sortable_icon) {\n          fupl_item_dom.querySelector('.fupl-sortable-icon').innerHTML = fupl_options.sortable_icon;\n        }\n        upl.addSortableEvents(fupl_item_dom, fupl_options);\n      }\n\n      return fupl_options.istance_result_wrapper.querySelector('.fupl-item:last-child');\n\n    } catch(e) {\n      console.error(e); // eslint-disable-line\n    }\n\n  }; // end upl.createItem\n\n  return upl;\n\n})(FileUploader || {});\n","FileUploader = ((upl) => {\n\n  // https://www.smashingmagazine.com/2018/01/drag-drop-file-uploader-vanilla-js/\n  upl.setListeners = (fupl_options) => {\n\n    ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {\n      fupl_options.element.addEventListener(eventName, (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n      }, false);\n    });\n\n    ['dragover', 'dragenter'].forEach(eventName => {\n      fupl_options.element.addEventListener(eventName, () => {\n        fupl_options.element.classList.add( fupl_options.element_dragover_class );\n      }, false);\n    });\n\n    ['dragleave', 'dragend'].forEach(eventName => {\n      fupl_options.element.addEventListener(eventName, () => {\n        fupl_options.element.classList.remove( fupl_options.element_dragover_class );\n      }, false);\n    });\n\n    fupl_options.element.addEventListener('drop', (e) => {\n      fupl_options.element.classList.remove( fupl_options.element_dragover_class );\n      if(!fupl_options.wrapper.hasAttribute('disabled')) {\n        let files = e.dataTransfer.files;\n\n        if(files.length) { // se 0 è un riordinamento o altro evento\n          if( !fupl_options.multiple && files.length > 1 ) {\n            fupl_options.alert_api(fupl_options.alert_messages.too_much_files, fupl_options);\n          } else {\n            upl.sendFiles( files, fupl_options );\n          }\n        }\n      }\n    }, false);\n\n    // selezione tramite input\n    fupl_options.istance_input.addEventListener('change', () => {\n      upl.sendFiles( fupl_options.istance_input.files, fupl_options );\n    });\n\n  }; // end upl.setListeners\n\n  return upl;\n\n})(FileUploader || {});\n","FileUploader = ((upl) => {\n\n  /*\n\tsendFiles\n\tEsegue i controlli impostati, quindi la chiamata ajax e produce\n\til feedback per l'utente\n\t*/\n  upl.sendFiles = (filelist, fupl_options) => {\n\n\n    /*\n    disable_submit\n    disabilita il form fino a caricamento completato\n    */\n    const disable_submit = (modo) => {\n      // modo === true → disable, false → enable\n        const _form = fupl_options.element.closest('form');\n\n        if(fupl_options.disable_submit && _form) {\n          const submit_btns = _form.querySelectorAll('[type=\"submit\"]');\n\n          submit_btns.forEach( btn => {\n            btn.disabled = modo;\n          });\n\n        //BUG il listener non viene rimosso con modo == false\n        // const submitHandler = (e) => {\n        //   e.preventDefault();\n        //   //return false;\n        // };\n        // if(modo === true) {\n        //   _form.addEventListener('submit', submitHandler);\n        // } else {\n        //   if( !fupl_options.istance_result_wrapper.querySelector('.fupl-item.fupl-is-uploading')) {\n        //     _form.removeEventListener('submit', submitHandler);\n        //   }\n        // }\n        }\n      },\n\n      /*\n      uploadFile\n      esegue l'upload Ajax\n      https://www.smashingmagazine.com/2018/01/drag-drop-file-uploader-vanilla-js/\n\n      current_item contiene:\n        - `id`: id univoco dell'elemento\n        - `file`: oggetto filelist\n        - `width` e height: dimensioni in pixel dell'immagine.\n                    null se non si tratta di immagini\n        - `tmp_file`: nel caso di nuovi elementi: nome del file temporaneo\n\n      */\n      uploadFile = function ( current_item, img_preview ) {\n\n        // disabilitazione form\n        disable_submit(true);\n\n        // aggiunta elemento all'uploader\n        let this_item = upl.createItem({\n            id       : current_item.id,\n            name     : current_item.file.name,\n            url      : null,\n            src      : img_preview,\n            wi       : current_item.width,\n            he       : current_item.height,\n            size     : current_item.file.size,\n            img_type : current_item.file.img_type,\n            loading  : true\n          }, fupl_options),\n\n\n          fupl_progress= this_item.querySelector('.fupl-progress'),\n          fupl_loading_wrapper = this_item.querySelector('.fupl-loading'),\n\n          xhr_error_message = fupl_options.alert_messages.xhr_error.replace(/{{file_name}}/, current_item.file.name);\n\n        //console.log(this_item); // eslint-disable-line\n\n        const remove_item_on_error = () => {\n          this_item.querySelector('.fupl-remove-trigger').click();\n        };\n\n        /*\n        Funzione callback personalizzata\n        Vedi `_set_options.js` per tutti i parametri\n        */\n        if( fupl_options.upload_start_callback ) {\n          upl.exec_callback(fupl_options.upload_start_callback, {\n            item              : current_item,\n            img_preview       : img_preview,\n            uploader_options  : fupl_options\n          });\n        }\n\n        new Promise(function(resolve, reject) {\n          let ajax = new XMLHttpRequest();\n          ajax.open( 'POST', fupl_options.uploader_url, true );\n\n          ajax.onload = function() {\n\n            if( ajax.status >= 200 && ajax.status < 400 ) {\n\n              const response = JSON.parse( ajax.responseText );\n\n              /*\n              jsonResponse:\n              {\n                \"tmp_file\": \"file_temporaneo\",\n                \"error\": null\n              }\n            */\n              if(response.error) {\n\n                fupl_options.alert_api( xhr_error_message, fupl_options );\n                console.error( response.error ); // eslint-disable-line\n                reject();\n\n              } else {\n                current_item.tmp_file = response.tmp_file;\n                resolve();\n              }\n\n              /*\n              Funzione callback personalizzata\n              Vedi `_set_options.js` per tutti i parametri\n              */\n              if( fupl_options.upload_complete_callback ) {\n                upl.exec_callback(fupl_options.upload_complete_callback, {\n                  item          : current_item,\n                  server_error  : response.error,\n                  fupl_options  : fupl_options\n                });\n              }\n\n\n            } else {\n              fupl_options.alert_api( xhr_error_message, fupl_options );\n              /* eslint-disable */\n              console.error( ajax.status, ajax.statusText );\n              console.error( ajax.responseText );\n              /* eslint-enable */\n            }\n\n            reject();\n          };\n\n          ajax.onerror = function() {\n            fupl_options.alert_api( xhr_error_message, fupl_options );\n            /* eslint-disable */\n            if(fupl_options.debug) {\n              console.error( ajax.status,  ajax.statusText );\n              console.error( ajax.responseText );\n            }\n            /* eslint-enable */\n\n            reject();\n          };\n\n          ajax.upload.addEventListener('progress', function (e) {\n            if( fupl_options.alternative_loading_func ) {\n              //fupl_options.alternative_loading_func(e, fupl_options);\n\n              upl.exec_callback(fupl_options.alternative_loading_func, ...[e, fupl_options]);\n\n            } else {\n              let perc_loaded = Math.round(e.loaded / e.total * 100.0) || 0;\n\n              //console.log(e.loaded ,e.total, perc_loaded); // eslint-disable-line\n              if(fupl_progress) {\n                if(e.lengthComputable) {\n                  perc_loaded = perc_loaded === Infinity? 100 : perc_loaded;\n                  this_item.querySelector('.fupl-progress').value = perc_loaded;\n                } else {\n                  fupl_loading_wrapper.innerHTML = fupl_options.templates.alternative_loading_element;\n                  fupl_progress = null;\n                }\n              }\n            }\n          }, false);\n\n\n          let fileData = new FormData();\n          fileData.append('file', current_item.file);\n          ajax.send( fileData );\n        }) // end promise\n          .then(\n            // resolve\n            function (  ) {\n              //console.log('resolve'); // eslint-disable-line\n              this_item.classList.remove('fupl-is-uploading');\n              this_item.querySelector('.fupl-loading').remove(); // elemento loading\n\n              this_item.insertAdjacentHTML('beforeend',\n                upl.buildHiddenFields(current_item, fupl_options)\n              );\n\n              upl.set_has_values(fupl_options);\n\n              //Se non ci sono altri elemento in caricamento, disable_submit viene annullato\n              disable_submit(false);\n\n            },\n            //reject\n            function (  ) {\n              //console.log('reject'); // eslint-disable-line\n              remove_item_on_error();\n              upl.set_has_values(fupl_options);\n            }\n          );\n\n      };\n\n    if( filelist.length ) {\n\n      // https://stackoverflow.com/questions/38362231/\n      //how-to-use-promise-in-foreach-loop-of-array-to-populate-an-object\n      [...filelist].forEach(function (filelist_item, idx) {\n        try {\n\n          let current_item = {\n            id: 'fupl_item_' + Date.now() + '_' + idx, // id unico\n            file: filelist_item,\n            width: null,\n            height: null,\n            tmp_file: null,\n            img_type: fupl_options._type === 'img'?\n              (filelist_item.type === 'image/svg+xml' ? 'svg' : 'bmp') : null\n          };\n\n          // controllo filetype (per drag&drop e browser che non supportano accept)\n          if( fupl_options.accept.length ) {\n            let ext = filelist_item.name.split('.').pop().toLowerCase();\n            if( fupl_options.accept.indexOf( filelist_item.type ) === -1 &&\n              fupl_options.accept.indexOf( '.' + ext ) === -1) {\n\n              throw fupl_options.alert_messages.file_format_error\n                .replace(/{{file_name}}/, filelist_item.name );\n            }\n          } // end controllo filetype\n\n          // controllo maxfilesize\n          if( fupl_options.max_filesize !== null ) {\n            if( filelist_item.size > fupl_options.max_filesize.maxbytes ) {\n              let item_parsed_size = upl.parse_filesize(filelist_item.size, fupl_options.locales);\n\n              throw fupl_options.alert_messages.file_size_error\n                .replace(/{{file_name}}/, filelist_item.name )\n                .replace(/{{file_size}}/, item_parsed_size )\n                .replace(/{{allowed_size}}/, fupl_options.max_filesize.feedback_size );\n\n            }\n          } // end controllo maxfilesize\n\n          // analisi immagini bitmap e caricamento\n          //if(current_item.img_type === 'bmp') {\n          if( fupl_options._type === 'img') {\n            let reader  = new FileReader();\n            reader.addEventListener('load', function () {\n\n              let image = new Image();\n              image.src = reader.result;\n              image.addEventListener('load', function () {\n\n                let err_mes = [];\n                current_item.width=image.width;\n                current_item.height=image.height;\n                if(current_item.img_type === 'bmp') {\n                  if( fupl_options.img_w && image.width !== fupl_options.img_w ) {\n                    err_mes.push(\n                      fupl_options.alert_messages.img_exact_width_err\n                        .replace(/{{image_dimension}}/, image.width)\n                        .replace(/{{allowed_dimension}}/, fupl_options.img_w)\n                    );\n\n                  } else if(fupl_options.img_min_w && image.width < fupl_options.img_min_w) {\n                    err_mes.push(\n                      fupl_options.alert_messages.img_min_width_err\n                        .replace(/{{image_dimension}}/, image.width)\n                        .replace(/{{allowed_dimension}}/, fupl_options.img_min_w)\n                    );\n\n                  } else if(fupl_options.img_max_w && image.width > fupl_options.img_max_w) {\n                    err_mes.push(\n                      fupl_options.alert_messages.img_max_width_err\n                        .replace(/{{image_dimension}}/, image.width)\n                        .replace(/{{allowed_dimension}}/, fupl_options.img_max_w)\n                    );\n                  }\n\n                  if (fupl_options.img_h && image.height !== fupl_options.img_h) {\n                    err_mes.push(\n                      fupl_options.alert_messages.img_exact_height_err\n                        .replace(/{{image_dimension}}/, image.height)\n                        .replace(/{{allowed_dimension}}/, fupl_options.img_h)\n                    );\n\n                  } else if(fupl_options.img_min_h && image.height < fupl_options.img_min_h) {\n                    err_mes.push(\n                      fupl_options.alert_messages.img_min_height_err\n                        .replace(/{{image_dimension}}/, image.height)\n                        .replace(/{{allowed_dimension}}/, fupl_options.img_min_h)\n                    );\n\n                  } else if(fupl_options.img_max_h && image.height > fupl_options.img_max_h) {\n                    err_mes.push(\n                      fupl_options.alert_messages.img_max_height_err\n                        .replace(/{{image_dimension}}/, image.height)\n                        .replace(/{{allowed_dimension}}/, fupl_options.img_max_h)\n                    );\n\n                  }\n                }\n\n                // aspect ratio\n                if(fupl_options.parsed_img_aspect_ratio) {\n                  let img_ratio = Math.round(((image.width / image.height) + Number.EPSILON) * fupl_options.aspect_ratio_accuracy) / fupl_options.aspect_ratio_accuracy;\n                  if(img_ratio !== fupl_options.parsed_img_aspect_ratio) {\n                    err_mes.push(\n                      fupl_options.alert_messages.img_ratio_err\n                        .replace(/{{aspect_ratio}}/, fupl_options.img_aspect_ratio)\n                    );\n                  }\n                }\n\n                if( err_mes.length ) {\n                  fupl_options.alert_api(\n                    fupl_options.alert_messages.img_err_start_string\n                      .replace(/{{file_name}}/, filelist_item.name ) + '<br>\\n' +\n                    '<ul><li>' + err_mes.join('</li>\\n<li>') + '</li></ul>',\n                    fupl_options );\n\n                } else {\n                  uploadFile( current_item, reader.result );\n                }\n\n              }, false); // end image.addEventListener(\"load\"\n\n            }, false); // end reader.addEventListener(\"load\"\n\n            reader.readAsDataURL( filelist_item );\n\n            // } else if(current_item.img_type === 'svg') { // svg\n\n            //   let reader = new FileReader();\n\n            //   reader.addEventListener('load', () => {\n\n            //     let image = new Image();\n            //     image.src = reader.result;\n\n            //     image.addEventListener('load', function () {\n            //       current_item.width=image.width;\n            //       current_item.height=image.height;\n            //     });\n\n            //     uploadFile( current_item,\n            //       reader.result\n            //       //'data:image/svg+xml;base64,' +  window.btoa(event.target.result)\n            //     );\n            //   });\n            //   reader.readAsDataURL(filelist_item);\n\n          } else { // non immagine\n            uploadFile( current_item );\n\n          } // end if image\n\n        } catch (errormessage) {\n          fupl_options.alert_api( errormessage, fupl_options ,'error');\n        }\n      }); // end foreach\n\n    } // end if( filelist.length )\n\n  }; // end upl.sendFiles\n\n  return upl;\n\n})(FileUploader || {});\n","FileUploader = ((upl) => {\n\n  /*\n    normalize ascii chars > 127 (and more)\n  */\n  const normalize_file_name = function (filename) {\n    let converted = '';\n    const conversionTable = { // Reference table Unicode vs ASCII\n      'à' : 'a', // 224\n      'è' : 'e', // 232\n      'é' : 'e', // 233\n      'ì' : 'i', // 236\n      'ò' : 'o', // 242\n      'ù' : 'u', // 249\n      'À' : 'A', // 192\n      'È' : 'E', // 200\n      'É' : 'E', // 201\n      'Ì' : 'I', // 204\n      'Ò' : 'O', // 210\n      'Ù' : 'U', // 217\n      '\\'' : '_', // 39\n      '|' : '_', // 124\n      '!' : '_', // 33\n      '\"' : '_', // 34\n      '$' : '_', // 36\n      '%' : '_', // 37\n      '&' : '_', // 38\n      '/' : '_', // 47\n      '(' : '_', // 40\n      ')' : '_', // 41\n      '=' : '_', // 61\n      '?' : '_', // 63\n      '^' : '_', // 94\n      '*' : '_', // 42\n      '[' : '_', // 91\n      ']' : '_', // 93\n      'ç' : 'c', // 231\n      '@' : '_', // 64\n      '#' : '_', // 35\n      '<' : '_', // 60\n      '>' : '_', // 62\n      'ü' : 'u', // 252\n      'Ü' : 'U', // 220\n      'ñ' : 'n', // 241\n      'Ñ' : 'N', // 209\n      '~' : '_', // 126\n      ':' : '_',\n      '\\\\' : '_'\n    };\n\n    for(var i = 0; i < filename.length; i++) {\n      if( filename[i] in conversionTable) {\n        converted += conversionTable[filename[i]];\n\n      } else if(filename.charCodeAt(i) === 768 || filename.charCodeAt(i) === 769 ) { // accento grave e accento acuto\n        converted += '';\n\n      } else if(filename.charCodeAt(i) > 127 ) {\n        converted += '_';\n\n      } else {\n        converted += filename.charAt(i);\n      }\n    }\n\n    return converted.replace(/ /g, '_').replace(/_+/g, '_');\n  };\n\n  /*\n  Generate hidden fields with values to be sent to server\n  Returns the hidden fields html string\n  */\n  upl.buildHiddenFields = (current_item, fupl_options) => {\n\n    let hidden_fields = '',\n      field_values = {\n        'tmp_file'  : current_item.tmp_file,\n        'file_name' : normalize_file_name(current_item.file.name),\n        'size'      : current_item.file.size,\n        'type'      : current_item.file.type\n      };\n\n    if(fupl_options._type === 'img') {\n      field_values.width = current_item.width;\n      field_values.height = current_item.height;\n    }\n    for (let _key in field_values) {\n      hidden_fields += '<input type=\"hidden\" '+\n        'name=\"' + fupl_options.varname + '[' + current_item.id +'][' + _key + ']\" '+\n        'value=\"' + ((field_values[_key] !== null && field_values[_key] !== undefined)? field_values[_key] : '') +'\">';\n    }\n\n    return '<div class=\"fupl-hiddens\">' + hidden_fields + '</div>';\n\n  };\n\n  return upl;\n\n})(FileUploader || {});\n","FileUploader = ((upl) => {\n  'use strict';\n\n  /*\n    basato su\n    - https://github.com/WolfgangKurz/grabbable\n\n    altri riferimenti:\n    - https://codepen.io/therealDaze/pen/ZaoErp\n    - https://github.com/gridstack/gridstack.js\n    - https://developer.mozilla.org/it/docs/Web/API/HTML_Drag_and_Drop_API\n    - https://www.html5rocks.com/en/tutorials/dnd/basics/\n    - https://kryogenix.org/code/browser/custom-drag-image.html\n    - http://jsfiddle.net/zfnj5rv4/\n  */\n\n  const classes = {\n    // classe aggiunta all'elemento fupl_options.istance_result_wrapper se l'opzione\n    // sortable è attiva\n    wrapper_class: 'fupl-sortable',\n\n    // classe aggiunta all'elemento principale (fupl_options.element) quando\n    // si trascina un elemento. Viene eliminata al dragleave\n    sorting_class: 'fupl-sorting',\n\n    // stesso criterio, ma classe aggiunta all'elemento trascinato\n    sorting_item_class: 'fupl-item-sorting',\n\n    // classe aggiunta all'elemento in seguito all'evento dragover\n    over_item_class: 'fupl-item-dragover'\n  };\n\n  let dragged_element = null,\n    uploader_is_disabled = false;\n\n  // pulisce eventuali eventi non conclusi correttamente\n  const resetAll = () => {\n    if( dragged_element ) {\n      dragged_element.classList.remove(classes.sorting_item_class);\n\n      dragged_element.parentNode.querySelectorAll('.' + classes.over_item_class).forEach(item => {\n        item.classList.remove(classes.over_item_class);\n      });\n\n      dragged_element.closest('.fupl').classList.remove(classes.sorting_class);\n    }\n\n    dragged_element = null;\n  };\n\n  upl.addSortableEvents = (fupl_item, fupl_options) => {\n\n    // trascinamento avviato\n    fupl_item.addEventListener('dragstart', function(e) {\n\n      uploader_is_disabled = fupl_options.wrapper.disabled;\n      resetAll();\n      if(!uploader_is_disabled) {\n\n        dragged_element = this;\n\n        // aggiunta classe `.fupl-sorting` all'elemento fupl per disattivare il feedback\n        // del drag&drop esterno al browser (vedi scss/_fupl.scss)\n        fupl_options.element.classList.add(classes.sorting_class);\n\n        e.dataTransfer.effectAllowed = 'move';\n        e.dataTransfer.setData('text', 'fupl-sorting');\n\n        this.classList.add(classes.sorting_item_class);\n      }\n    }, false);\n\n    // inizio posizionamento sopra un altro elemento\n    // e.target (this) è l'elemento\n    fupl_item.addEventListener('dragenter', function(e) {\n      // non si attiva per file dall'esterno e per uploader disbilitato\n      if( e.dataTransfer.getData('text') === 'fupl-sorting' && !uploader_is_disabled) {\n        if (e.stopPropagation) {\n          e.stopPropagation(); // stops the browser from redirecting.\n        }\n        if( this !== dragged_element ) {\n          this.classList.add(classes.over_item_class);\n        }\n      }\n    }, false);\n\n    // posizionamento sopra un altro elemento\n    // e.target è l'elemento\n    fupl_item.addEventListener('dragover', function(e) {\n\n      if( e.dataTransfer.getData('text') === 'fupl-sorting' && !uploader_is_disabled ) {\n\n        if (e.preventDefault) {\n          e.preventDefault();\n        }\n        e.dataTransfer.dropEffect = 'move';\n        if( this !== dragged_element ) {\n          this.classList.add(classes.over_item_class);\n        }\n      }\n\n      return false;\n    }, false);\n\n    // uscita posizionamento sopra un altro elemento\n    // e.target è l'elemento\n    fupl_item.addEventListener('dragleave', function() {\n      this.classList.remove(classes.over_item_class);\n    }, false);\n\n    // drop e.target è l'elemento\n    fupl_item.addEventListener('drop', function(e) {\n\n      if( e.dataTransfer.getData('text') === 'fupl-sorting' && !uploader_is_disabled) {\n        if (e.stopPropagation) {\n          e.stopPropagation(); // stops the browser from redirecting.\n        }\n\n        e.preventDefault();\n\n        if(dragged_element) {\n          if(this.previousElementSibling === dragged_element && this.nextElementSibling ) {\n            this.parentNode.insertBefore(dragged_element, this.nextElementSibling);\n\n          } else if( this.nextElementSibling ) {\n            this.parentNode.insertBefore(dragged_element, this);\n\n          // se si tratta dell'ultimo elemento si mette alla fine\n          } else {\n            this.parentNode.insertAdjacentElement('beforeend', dragged_element);\n          }\n        }\n        resetAll();\n      }\n\n      return false;\n\n    }, false);\n\n    // trascinamento terminato\n    fupl_item.addEventListener('dragend', function(e) {\n\n      if( e.dataTransfer.getData('text') === 'fupl-sorting' && !uploader_is_disabled) {\n        fupl_options.element.classList.remove(classes.sorting_class);\n        resetAll();\n\n        //variable order\n        fupl_options.istance_result_wrapper.querySelectorAll('.fupl-sortable-order').forEach((item,idx) => {\n          item.value = idx;\n        });\n      }\n\n    }, false);\n  };\n\n  upl.activateSortable = (fupl_options) => {\n\n    // add classes\n    fupl_options.istance_result_wrapper.classList.add(classes.wrapper_class);\n\n  }; // end upl.activateSortable\n\n  return upl;\n\n})(FileUploader || {});\n","FileUploader = ((upl) => {\n  'use strict';\n\n\n  /**\n\t * create_info_text\n\t * Creates a string of information about the file requirements\n\t *\n\t */\n  upl.create_info_text = fupl_options => {\n    let info_text = [];\n\n    switch (fupl_options.filetype) {\n      case 'img':\n        info_text.push( fupl_options.info_text.std_imgs);\n        break;\n\n      case 'img+svg':\n        info_text.push( fupl_options.info_text.imgs_svg);\n        break;\n\n      case 'svg':\n        info_text.push( fupl_options.info_text.svg);\n        break;\n\n      case 'pdf':\n        info_text.push( fupl_options.info_text.pdf_file);\n        break;\n    }\n\n    if( fupl_options.max_filesize !== null ) {\n      info_text.push( fupl_options.info_text.max_filesize );\n    }\n\n    if( fupl_options.filetype === 'img' || fupl_options.filetype === 'img+svg' ) {\n\n      let img_size_info = [];\n\n      if( fupl_options.img_w && fupl_options.img_h ) {\n        img_size_info.push( fupl_options.info_text.img_fixed_size );\n\n      } else {\n\n        if(fupl_options.img_min_w && fupl_options.img_min_h && fupl_options.img_min_w === fupl_options.img_min_h) {\n          img_size_info.push( fupl_options.info_text.img_equal_min_size );\n\n        } else if(fupl_options.img_max_w && fupl_options.img_max_h && fupl_options.img_max_w === fupl_options.img_max_h) {\n          img_size_info.push( fupl_options.info_text.img_equal_max_size );\n\n        } else {\n\n          if( fupl_options.img_w ) {\n            img_size_info.push( fupl_options.info_text.img_fixed_width );\n\n          } else if( fupl_options.img_min_w && fupl_options.img_max_w ) {\n            img_size_info.push( fupl_options.info_text.img_width_range );\n\n          } else if( fupl_options.img_min_w ) {\n            img_size_info.push( fupl_options.info_text.img_min_width );\n\n          } else if( fupl_options.img_max_w  ) {\n            img_size_info.push( fupl_options.info_text.img_max_width );\n          }\n\n          if( fupl_options.img_h ) {\n            img_size_info.push( fupl_options.info_text.img_fixed_height );\n\n          } else if( fupl_options.img_min_h && fupl_options.img_max_h ) {\n            img_size_info.push( fupl_options.info_text.img_height_range );\n\n          } else if( fupl_options.img_min_h ) {\n            img_size_info.push( fupl_options.info_text.img_min_height );\n\n          } else if( fupl_options.img_max_h ) {\n            img_size_info.push( fupl_options.info_text.img_max_height );\n          }\n\n          if(fupl_options.img_aspect_ratio) {\n            img_size_info.push( fupl_options.info_text.img_aspect_ratio );\n          }\n        }\n      }\n\n      if(img_size_info.length) {\n        info_text.push(\n          (fupl_options.filetype === 'img+svg' ? fupl_options.info_text.imgs_svg_size_info_text : '') +\n          img_size_info.join(', ')\n        );\n      }\n    }\n\n    info_text = info_text.map( item => {\n      return item.replace(/{{img_w}}/, fupl_options.img_w)\n        .replace(/{{img_h}}/, fupl_options.img_h)\n        .replace(/{{img_min_w}}/, fupl_options.img_min_w)\n        .replace(/{{img_min_h}}/, fupl_options.img_min_h)\n        .replace(/{{img_max_w}}/, fupl_options.img_max_w)\n        .replace(/{{img_max_h}}/, fupl_options.img_max_h)\n        .replace(/{{img_aspect_ratio}}/, fupl_options.img_aspect_ratio)\n        .replace(/{{max_filesize}}/, fupl_options.max_filesize? fupl_options.max_filesize.feedback_size : null);\n    });\n\n    let str = info_text.join(fupl_options.info_text_join_string);\n    str = str.charAt(0).toUpperCase() + str.slice(1);\n\n    if(fupl_options.info_text_wrap_string && str) {\n      str = fupl_options.info_text_wrap_string[0] + str + fupl_options.info_text_wrap_string[1];\n    }\n\n    if(fupl_options.filetype === 'svg' || fupl_options.filetype === 'img+svg') {\n      str += fupl_options.info_text.svg_optimize_info;\n    }\n\n    return str;\n  };\n\n  return upl;\n\n})(FileUploader || {});\n","FileUploader = ( (upl) => {\n\n  // default params\n  const default_options = {\n\n    /*\n    name of main data-* selector\n    */\n    fupl_selector : 'file-uploader',\n\n    /*\n    silent degradation\n    if true, no errors are trhown with unsuitable browsers, and\n    you can degrade to a standard input[type=\"file\"] field\n    */\n    silent_degradation: false,\n\n    /*\n      function called when an unsuitable browser is detected\n    */\n    unsuitable_browser_callback: null,\n\n    /*\n      FileUploader CSS path\n    */\n    css: null,\n\n    /*\n      If true, console shows informations about current FileUploader Configuration\n    */\n    debug: false,\n\n    /*\n      locales string, used to correctly format numbers in FileUploader info text\n    */\n    locales: 'it-IT',\n\n    /*\n    If true, it prevents items from being loaded\n\n    The presence of the disabled attribute in the .fupl-wrapper element disables the element\n    input [type = file] generated by FileUploader (HTML 5 std behavior) and prevents drag & drop.\n\n    The disabled parameter can also be set via the element attribute\n    input [type = file] of fallback, if present.\n    Be carefully about changing disabled state of the input field on the fly:\n    to have it affect the FileUploader instance, you must also modify the disabled attribute\n    of the fieldset.fupl-wrapper element.\n    */\n    disabled: false,\n\n    /*\n      error messeges interface\n      Parameters:\n        - mes  → `alert_messages` object key (`alert_messages` contains all string messages, see below)\n        - type → one of info, error, warning\n        - opts → options of current FileUploader instance\n    */\n    alert_api: (mes, opts, type = 'error') => {  // eslint-disable-line\n      window.alert(mes.replace(/(<([^>]+)>)/ig, '' ));\n    },\n\n    /*\n      Error messages\n      Mustache-like placeholders will be replaced with corresponding values\n    */\n    alert_messages: {\n\n      unsuitable_browser: 'Il tuo browser non ha tutte le funzionalità richieste ' +\n      'da questa applicazione.\\n' +\n      'Utilizza la versione più recente di Firefox, Edge, Safari, Opera o Chrome',\n\n      too_much_files: 'Puoi selezionare un solo file!', // tentativo di trascinare più file con uploader singolo\n      xhr_error: 'Si &egrave; verificato un errore nel caricamento del file “<strong>{{file_name}}</strong>”.', // errore ajax\n      file_format_error: 'Il file “<strong>{{file_name}}</strong>” è di un formato non consentito',\n      file_size_error: 'Le dimensioni di “<strong>{{file_name}}</strong>” ({{file_size}}) '+\n        'superano il valore massimo consentito ({{allowed_size}})',\n\n      // images\n      img_err_start_string: 'L\\'immagine “<strong>{{file_name}}</strong>” non è corretta:',\n      img_exact_width_err: 'Larghezza non corrispondente ({{image_dimension}}px invece di {{allowed_dimension}}px)',\n      img_min_width_err: 'Larghezza inferiore a quella minima consentita ({{image_dimension}}px invece di {{allowed_dimension}}px)',\n      img_max_width_err: 'Larghezza superiore a quella massima consentita ({{image_dimension}}px invece di {{allowed_dimension}}px)',\n      img_exact_height_err: 'Altezza non corrispondente ({{image_dimension}}px invece di {{allowed_dimension}}px)',\n      img_min_height_err: 'Altezza inferiore a quella minima consentita ({{image_dimension}}px invece di {{allowed_dimension}}px)',\n      img_max_height_err: 'Altezza superiore a quella massima consentita ({{image_dimension}}px invece di {{allowed_dimension}}px)',\n      img_ratio_err: 'La proporzione tra base e altezza dell\\'immagine non corrisponde a quella richiesta ({{aspect_ratio}})'\n    },\n\n    /*\n      Server side script url that performs the upload to the server and\n      returns a json info string\n      Mandatory\n    */\n    uploader_url: null,\n\n\n    /*\n      Types of selectable files\n      the value must match one of the `upl.mimetypes` arrays\n    */\n    filetype: 'auto',\n\n    /*\n\n      String of extensions or mimetypes separated by commas that identify\n      alloewd files to be uploaded,\n      in addition or replacement of what is set via the `filetype` parameter.\n\n      The `accept` attribute of the input field contained\n      in the FileUploader element (if present), performs the same function.\n\n      In both cases, the values are taken into account only if `filetype == 'auto'`\n\n      In the presence of both the `accept` parameter and the `accept` attribute,\n      a merge is performed, and the accept attribute takes precedence over the parameter.\n      If this parameter is `null`, the` accept` attribute is not present,\n      and  `filetype` parameter is `auto` all file types are accepted.\n\n    */\n    accept: null,\n\n    /*\n      Enable the ability to uploader multiple files.\n      This option can also be activated via the `multiple` attribute\n      of the `input` field (if present)\n    */\n    multiple: false,\n\n    /*\n      Set the FileUploder as required\n      This option can also be activated via the `multiple` attribute\n      of the `input` field (if present)\n    */\n    required: false,\n\n    /*\n      Disable FileUploader parent form element and its submit button while\n      FileUploader is performing an upload.\n      Take care to avoid any conflicts with other behaviors of the form before actving this option\n    */\n    disable_submit: false,\n\n    /*\n      HTML templates\n\n      - `main`         : main template- It is inserted inside the `fupl_selector` element.\n                         The `flup` class is also added to this element, and is wrapped by\n                         the `.flup-wrapper` fieldset\n      - `single_img`   : single image template\n      - `multiple_imgs`: multiple images template\n      - `single_doc`   : single document template\n      - `multiple_docs`: multiple documents template\n      - `no_file`      : template used when no file is present\n\n      Take a look to the readme for more info.\n      Default markup uses some Boostrap 4 classes.\n\n      You can modify these templates as you need, but you have to preserve\n      the `fupl-*` classes\n\n      Images templates must contain the img tag.\n\n      Multiple documents and images templates can be null: single elements templates\n      are used in this case.\n    */\n    templates: {\n\n      main: '<div class=\"fupl-result\"></div>' +\n        '<div class=\"fupl-panel\">' +\n          '<div class=\"fupl-button\">' +\n            '<label><input type=\"file\"></label>' +\n            '<div class=\"fupl-dd-text\"></div>' +\n          '</div>' +\n          '<div class=\"fupl-info-text\"></div>' +\n        '</div>',\n\n      no_file: {\n        img: '<div class=\"fupl-result-empty text-muted small font-italic\">Nessuna immagine presente</div>',\n        doc: '<div class=\"fupl-result-empty text-muted small font-italic\">Nessun file presente</div>'\n      },\n\n      /*\n        trigger for removing files\n        This markup will be placed inside the `.fupl-remove` element,\n        that must be present in the template of each FileUploader item\n        It must be a button element\n      */\n      remove_btn: '<button type=\"button\" class=\"close fupl-remove-trigger\" aria-label=\"Elimina\" title=\"Elimina questo file\">' +\n            '<span aria-hidden=\"true\">&times;</span>' +\n          '</button>',\n\n      /*\n        Markup to show uploading progress\n      */\n      loading_element: '<div class=\"fupl-loading\"><progress class=\"fupl-progress\" max=100 value=0></progress></div>',\n\n      /*\n        Alternative loading feedback, used if progress.lengthComputable == false.\n        In this case and if the `alternative_loading_func` function is not present,\n        this string replaces the `.fupl-progress` element.\n      */\n      alternative_loading_element: '<div class=\"spinner-grow text-primary\" role=\"status\">' +\n          '<span class=\"sr-only\">Loading...</span></div',\n\n      /*\n        items templates\n        if tag <a> is used, avoid `href` attribute\n      */\n      img: {\n        single: '<div class=\"fupl-item\">' +\n          '<div class=\"fupl-remove\"></div>' +\n          '<img alt=\"Immagine caricata\" class=\"img-fluid fupl-img\">' +\n          '<div class=\"fupl-file-info\">' +\n            '<div class=\"text-truncate fupl-file-name\"></div>' +\n            '<div class=\"fupl-file-size\"></div>' +\n            '<div class=\"fupl-extra-fields\"></div>' +\n          '</div>' +\n        '</div>',\n\n        multiple: '<div class=\"fupl-item\">' +\n            '<div class=\"fupl-remove\"></div>' +\n            '<div class=\"fupl-img-wrapper\">' +\n              '<img alt=\"Immagine caricata\" class=\"img-fluid fupl-img\" draggable=\"false\">' +\n            '</div>' +\n            '<div class=\"fupl-file-info\">' +\n              '<div class=\"text-truncate fupl-file-name\"></div>' +\n              '<div class=\"fupl-file-size\"></div>' +\n            '</div>' +\n            '<div class=\"fupl-extra-fields\"></div>' +\n            '<div class=\"fupl-sortable-icon\"></div>' +\n          '</div>'\n      },\n\n      doc : {\n        single: '<div class=\"fupl-item\">' +\n            '<div class=\"fupl-doc-wrapper\">' +\n              '<div class=\"fupl-remove\"></div>' +\n              '<div class=\"fupl-doc text-truncate\">' +\n                '<a class=\"text-truncate fupl-file-name fupl-url\" draggable=\"false\"></a>' +\n              '</div>' +\n            '</div>' +\n            '<div class=\"small ml-1 text-nowrap fupl-file-size\"></div>' +\n            '<div class=\"fupl-extra-fields\"></div>' +\n            '<div class=\"fupl-sortable-icon\"></div>' +\n          '</div>',\n\n        multiple: null // uses single doc templates\n      }\n    },\n\n    /*\n      info text strings\n      Mustache-like placeholders will be replaced with corresponding values\n    */\n    info_text: {\n      std_imgs : 'immagini in formato <strong>JPEG</strong>, <strong>PNG</strong>, <strong>GIF</strong> o <strong>WEBP</strong>',\n      imgs_svg : 'immagini in formato <strong>JPEG</strong>, <strong>PNG</strong>, <strong>GIF</strong>, <strong>WEBP</strong> o <strong>SVG</strong>',\n      imgs_svg_size_info_text: '<strong>Solo immagini non SVG:</strong> ',\n      svg_optimize_info: '<br>È consigliabile ottimizzare i file SVG prima del caricamento, ' +\n        'ad esempio tramite <a href=\"https://jakearchibald.github.io/svgomg/\" target=\"_blank\">SVGO</a>',\n      img_fixed_size: 'dimensioni: <strong>{{img_w}}&times;{{img_h}}px</strong>',\n      img_equal_min_size: 'larghezza e altezza non inferiori a <strong>{{img_min_w}}px</strong>',\n      img_equal_max_size: 'larghezza e altezza non superiori a <strong>{{img_max_w}}px</strong>',\n      img_fixed_width : 'larghezza <strong>{{img_w}}px</strong>',\n      img_fixed_height : 'altezza <strong>{{img_h}}px</strong>',\n      img_width_range: 'larghezza compresa tra <strong>{{img_min_w}}px</strong> e <strong>{{img_max_w}}px</strong>',\n      img_min_width: 'larghezza non inferiore a <strong>{{img_min_w}}px</strong>',\n      img_max_width: 'larghezza non superiore a <strong>{{img_max_w}}px</strong>',\n      img_height_range: 'altezza compresa tra <strong>{{img_min_h}}px</strong> e <strong>{{img_max_h}}px</strong>',\n      img_min_height: 'altezza non inferiore a <strong>{{img_min_h}}px</strong>',\n      img_max_height: 'altezza non superiore a <strong>{{img_max_h}}px</strong>',\n      pdf_file: 'file in formato <strong>PDF</strong>',\n      svg: 'immagini in formato <strong>SVG</strong>',\n      max_filesize: 'max <strong>{{max_filesize}}</strong>',\n      img_aspect_ratio: 'Il rapporto tra base e altezza dell\\'immagine deve essere esattamente pari a <strong>{{img_aspect_ratio}}</strong>'\n    },\n\n    /*\n      Extra classes to be added to the FileUploader wrapper element\n      (classes names separated by spaces)\n    */\n    wrapper_extra_class: null,\n\n    /*\n      Class(es) to be added to the FileUploader element when a file is dragged there from desktop\n    */\n    element_dragover_class: 'fupl-is-dragover',\n\n    /*\n      If true a legend tag will be added inside the the FileUploader wrapper (fieldset)\n      It will be filled with the text of the label of the input[file] tag (if present)\n      or with the uploader_legend_text parameter content\n    */\n    uploader_legend: true,\n\n    /*\n      Text of legend element (alternative to original label text)\n    */\n    uploader_legend_text: null,\n\n    /*\n      Class to be added to uploader_legend element\n    */\n    uploader_legend_class: null,\n\n    /*\n    texts of the label of the generated input tag and of the drag&drop info text\n    (to be inserted in `.fupl-dd-text`)\n    */\n    input_text: {\n      img: {\n        single:   ['Seleziona un\\'immagine', '\\u2026oppure trascinala qui'],\n        multiple: ['Seleziona una o pi&ugrave; immagini', '\\u2026oppure trascinale qui']\n      },\n      doc: {\n        single: ['Seleziona un documento', '\\u2026oppure trascinalo qui'],\n        multiple: ['Seleziona uno o pi&ugrave; documenti', '\\u2026oppure trascinali qui']\n      }\n    },\n\n    /*\n      classes to be added to the label of the generated nput[file] tag\n    */\n    input_label_class: 'btn btn-outline-primary btn-sm',\n\n\n    /*\n      whether or not to show the information text on accepted formats, image size, etc.\n      If you decide not to show it, you may need to remove the\n      `.fupl-info-text` element from the template\n    */\n    show_info_text: true,\n\n    /*\n      strings added to the beginning and end of the generated info text\n      used only if `custom_info_text` is not set\n    */\n    info_text_wrap_string: ['(', ')'],\n\n    /*\n      String used to join the various parts of the generated info text\n      used only if `custom_info_text` is not set\n    */\n    info_text_join_string: ' - ',\n\n    /*\n      Custom info text\n      If present, replaces the generated info text\n    */\n    custom_info_text: null,\n\n    /*\n      help text\n      If present, is added after the info_text or custom_info_text\n      (if show_info_text === true)\n      help_text will be inserted into a `.fupl-help-text` div, located inside\n      the `.fupl-info-text` div\n      html is allowed\n    */\n    help_text: null,\n\n    /*\n    Images settings (only for filetype == 'img')\n\n    Numeric values that correspond to the pixel dimensions required for the image.\n    The img_min_* and img_max_* parameters can be assigned simultaneously,\n    but they are ignored if the corresponding exact parameters exist\n    (for example, if img_w is present, the parameters img_min_w and img_max_w\n    or img_aspect_ratio are not taken into consideration).\n    The default value of all parameters is null, which means that they are not applied.\n    Aspect ratio must be a number or string in w/h or w:h format or the result of w/h division.\n    Aspect ratio values are rounded to three decimal places\n\n      * `img_w`            : exact image width\n      * `img_h`            : exact image height\n      * `img_min_w`        : min image width\n      * `img_min_h`        : min image height\n      * `img_max_w`        : max image width\n      * `img_max_h`        : max image height\n      * `img_aspect_ratio` : aspect ratio w/h value (16/9, 4:3, 0.5, ecc)\n    */\n    img_w            : null,\n    img_h            : null,\n    img_min_w        : null,\n    img_min_h        : null,\n    img_max_w        : null,\n    img_max_h        : null,\n    img_aspect_ratio : null,\n\n\n    /*\n      Aspect Ratio accuracy.\n      It is a number that indicates the decimal numbers to which the image size\n      ratio will be rounded for comparison with the `img_aspect_ratio` parameter\n    */\n    aspect_ratio_accuracy: 2,\n\n    /*\n      Maximum size (weight) of the image. It can be a number,\n      and in this case it corresponds to a dimension in KB, or a string\n      composed of a numeric value and a suffix between ‘KB’ and ‘MB’ (also lowercase).\n      If the value is null or if the string is not recognized,\n      no limit is applied.\n    */\n    max_filesize: null,\n\n    /*\n      Prefix of the variable used to send the data to the server.\n      The value indicates the base name of the generated varname\n    */\n    varname: 'file',\n\n    /*\n      Prefix of the variable used to send the data to the server,\n      for extra fields of preregistered files only\n      (For compatibility with beta version)\n    */\n    registered_extra_field_varname: null,\n\n    /*\n      Function called after the initialization of each FileUploader element.\n      Function is invoked passing the complete `fupl_options` obj as argument\n    */\n    init_callback: null,\n\n    /*\n      Function called each time a file upload begins.\n      Function argument is an object that contains:\n        * `item`: current item object, it contains:\n            - `id`: element unique id\n            - `file`: current filelist object\n            - `width` and `height`: null or image dimensions (pixel)\n        * `img_preview` : base64 image preview (null if not an image)\n        * `fupl_options`: options of current FileUploader instance\n    */\n    upload_start_callback: null,\n\n    /*\n      Function called each time a file has been uploaded.\n        Function argument is an object that contains:\n        * `item`: current item object, it contains:\n            - `id`: element unique id\n            - `file`: current filelist object\n            - `width` and `height`: null or image dimensions (pixel)\n            - `tmp_file`: name of temporary file saved on the server\n        * `server_error`: error message strimg (null if no error occurred)\n        * `fupl_options`: options of current FileUploader instance\n    */\n    upload_complete_callback: null,\n\n    /*\n      Alternative upload progress function (see alternative_loading_element parameter)\n      If present, it replaces the standard one\n      Function argument is an object that contains:\n        - `progress_event`: upload progress event\n        - `fupl_options`: options of current FileUploader instance\n    */\n    alternative_loading_func: null,\n\n    /*\n      JSON array of preregistered element:\n      [\n        {\n          rel_id → id of the record related to the file (it's facultative and can be null).\n                   It's usefully for many-to-many tables, and, if present,\n                   is the one provided to delete a file from the server\n          id     → unique id of the file (required)\n          name   → file name (required)\n          url    → url for <a> tag href attribute (if present) (facultative)\n          src    → image `src` attribute (required for images only)\n          wi     → image pixel width  (for images only)\n          he     → image pixel height  (for images only)\n          size   → bytes size\n          [...]  → extra fields, if present\n        }\n        [...]\n      ]\n    */\n    values: [],\n\n    /*\n      varname use for deleted file generated hidden fields\n    */\n    delete_varname: 'elimina_file[]',\n\n    /*\n      if true fancybox integration is activated for images\n      fancybox is not present in FileUploader, and must be loaded in the page\n      Furthermore, to activate this option, an `url` parameter must be provided\n      (see `values` option)\n    */\n    fancybox: false,\n\n    /*\n      markup of <a> tag to wrap image tags when fancybox option is active\n      if a `a.fupl-url` element is present in img templates string, this options\n      will not be used\n    */\n    fancybox_anchor_markup: '<a class=\"fupl-url\" data-fancybox=\"fupl-gallery\"></a>',\n\n    /*\n      optional function to be called after fancybox markup is applied\n      to all elements and after `init_callback`.\n      Function is invoked passing the complete `fupl_options` obj as argument\n    */\n    fancybox_callback_func: null,\n\n    // ========================================\n    // SORTABLE OPTIONS\n    // ========================================\n    /*\n      Enable the ability to rearrange items by dragging them.\n\n      This options adds one more hidden field for each file to the form, using the\n      `reorder_varname` parameter for generated varnames.\n\n      The reorder option is enabled if the reorder parameter is true, if\n      the multiple parameter is true and if the sortable_varname parameter is present\n\n      If the option is active, the values of any pre-recorded items\n      must be provided in the json `values` in the correct order\n\n      See `demo / reorder_demo.html` for a usage example\n    */\n    sortable: false,\n\n    /*\n      sortable hidden item varname\n      it will be combined with main varname to obtain a string like\n        varname[item_id][sortable_varname]\n    */\n    sortable_varname: 'fupl_order',\n\n    /*\n      markup for dragging icon\n      to be inserted in `.fupl-sortable-icon` element,\n      that must be present in the multiple item template\n    */\n    sortable_icon: '<div title=\"Trascina per cambiare l\\'ordinamento\"></div>',\n\n    // ========================================\n    // EXTRA FIELDS\n    // ========================================\n    /*\n      Markup to be added at the end of every uploaded item.\n      It is an array of objects each of which describes a field element:\n        [\n          {\n            \"value_key\": field key,\n            \"markup\": html string\n          },\n          ...\n        ]\n\n      * `value_key` identifies the field element and corresponds to the key used\n                    also in the values object.\n      * `use_rel_id` (default false), if true, and the `values` parameter contains the\n                     `rel_id` items, the `{{name}}` variable will be generated\n                     using `rel_id` instead of `id`.\n                     Only pre-registered items will be affected by this setting (since new items\n                     never have a `rel_id`).\n                     If `use_rel_id` is true but the `rel_id`  item doesn't exist,\n                     the `id`  will be used\n\n      * `markup` is a HTML string which contains some Mustache-like placeholder:\n        - `{{idx}}`         → unique id of the element\n        - `{{val}}`         → content of value attribute, it corresponds to\n                              `values[...][value_key]` value\n        - `{{checked}}`     → if `values[...][value_key]` exists and it's different from\n                              `0`, `null` or empty string, it is replaced with the `checked` attribute,\n                              otherwise, with an empty string\n        - `{{name}}`        → is replaced with a PHP name string formed by\n                                 * the `varname` parameter\n                                 * the unique id or rel_id (according to use_rel_id setting) of the element\n                                 * the `value_key` string\n                              Example: `file[fupl_00001][caption]`\n\n      Take a look to `extra_fields_demo.html` for a working demo.\n\n    */\n    extra_fields: null\n  };\n\n  upl.setOptions = (...custom_options) => {\n\n    if( Object.assign && typeof Object.assign === 'function') {\n      return Object.assign(\n        {},\n        default_options,\n        ...custom_options\n      );\n\n    } else { // IE 11, necessario anche se non c'è il supporto IE\n      let opts = {};\n      for(let i in default_options) {\n        opts[i] = default_options[i];\n        custom_options.forEach( item => {\n          if(item[i] !== undefined) {\n            opts[i] = item[i];\n          }\n        });\n      }\n      return opts;\n    }\n  };\n\n  return upl;\n\n})(FileUploader || {});\n","FileUploader = ((upl) => {\n\n  /*\n    Mimetypes and extensions allowed according to `filetype` parameter\n    The `auto` parameter accepts all file types (except for limitations\n    added by `accept` parameter/attribute)\n  */\n  upl.mimetypes = {\n    auto : null,\n    img  : ['image/png', 'image/jpeg', 'image/pjpeg', 'image/gif', 'image/webp',\n      '.png', '.jpg', '.jpeg', '.pjpg', '.pjpeg', '.gif', '.webp'],\n    pdf  : ['application/pdf', '.pdf'],\n    svg  : ['image/svg+xml', '.svg', '.svgz']\n  };\n  upl.mimetypes['img+svg'] = upl.mimetypes['img'].concat(upl.mimetypes['svg']);\n\n  /*\n    names of data-* attributes\n  */\n  upl.data_attributes = {\n    required      : 'required',\n    hasValues     : 'hasValues', // true if preregistered files are present\n    item_id       : 'id' // unique id of each file added to FileUploader\n  };\n\n  upl.set_has_values = fupl_options => {\n    let items = fupl_options.istance_result_wrapper.querySelectorAll('.fupl-item').length;\n    fupl_options.wrapper.dataset[upl.data_attributes.hasValues] = items? 'true' : 'false';\n    if(!items) {\n      fupl_options.istance_result_wrapper.innerHTML = fupl_options.templates.no_file[fupl_options._type];\n    }\n  };\n\n\n  upl.parse_filesize = (bytes, locales) => {\n    bytes = +bytes;\n    let mega = 1024*1024;\n    if(bytes >= mega ) {\n      return (bytes/mega).toLocaleString(locales, {maximumFractionDigits: 1}) + '<span class=\"fupl-unit\">MB</span>';\n\n    } else if (bytes < 1024) {\n      return Number((bytes/1024).toFixed(2)).toLocaleString(locales, {maximumFractionDigits: 2}) +\n        '<span class=\"fupl-unit\">KB</span>';\n\n    } else {\n      return Math.round(bytes/1024).toLocaleString(locales, {maximumFractionDigits: 0}) +\n        '<span class=\"fupl-unit\">KB</span>';\n    }\n  };\n\n\n  /*\n   Parse the `max_filesize` parameter (if exists) and returns:\n    - `null` if max_filesize === null\n    - `false` if `max_filesize` is not a correct value\n    - the object `{ maxbytes: 123456, unit: 'KB', feedback_size: '1.2KB'}`\n    where\n      - `maxbytes` is max_filesize value in bytes\n      - `unit` is one of 'KB' and 'MB'\n      - `feedback_size` is a textual representation of max_filesize\n         for the purpose of providing end user informations\n  */\n  upl.parse_max_filesize = (filesize_value, locales) =>  {\n    // max_filesize checking and parsing\n    if( filesize_value ) {\n      var maxbytes, unit, feedback_size;\n\n      if(!isNaN(filesize_value)) { //solo numero, si assume siano KB\n        maxbytes = +filesize_value;\n        unit = 'KB';\n        feedback_size = maxbytes;\n\n      } else {\n\n        unit = filesize_value.substr(-2, 2).toUpperCase();\n        maxbytes = +filesize_value.substr(0, filesize_value.length-2);\n        feedback_size = maxbytes;\n\n        if(isNaN(maxbytes) || (unit !== 'KB' && unit !== 'MB') ) {\n          return false;\n        }\n      }\n\n      // If unit is KB but value is bigger than 1MB,\n      // unit is changed\n      if( maxbytes >= 1024 && unit === 'KB') {\n        unit = 'MB';\n        feedback_size = (Math.round((maxbytes / 1024) * 100) /100);\n      }\n\n      if(unit === 'KB') {\n        maxbytes = maxbytes * 1024;\n      } else {\n        maxbytes = maxbytes * 1024 * 1024;\n      }\n\n      return {\n        //'original_value': filesize_value,\n        //'unit'         : unit,\n        'maxbytes'     : maxbytes,\n        'feedback_size': feedback_size.toLocaleString(\n          locales, {maximumFractionDigits: (unit === 'KB'? 0 : 1)}\n        ) + '<span class=\"fupl-unit\">' + unit + '</span>'\n      };\n\n    } else {\n      return null;\n    }\n  };\n\n  upl.exec_callback = (callback_function, params) => {\n    try {\n      if(typeof callback_function === 'string') {\n\n        let cbk_func = window;\n        callback_function.split('.').forEach( function(item) {\n          cbk_func = cbk_func[item];\n        });\n        cbk_func(params);\n\n      } else {\n        callback_function(params);\n      }\n\n    } catch(error) {\n      alert(`Si è verificato un errore: la funzione “${callback_function}” non esiste`);\n      console.error(error); // eslint-disable-line\n    }\n  };\n\n  return upl;\n\n})(FileUploader || {});\n"]}